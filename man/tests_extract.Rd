% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tests.R
\name{tests_add}
\alias{tests_add}
\alias{tests_extract}
\title{Add a new definition of a test item}
\usage{
tests_add(
  test_def,
  symbol,
  title,
  names_cuh = NA,
  names_external = NA,
  search_pattern,
  search_exclude = NA,
  search_exclude_group = NA,
  type = "numeric",
  silently_exclude_na_when = FALSE,
  silently_exclude_when = FALSE,
  censoring_fn = case_when(TRUE ~ NA_character_),
  value_as_number_fn = if_else(type == "numeric", case_when(TRUE ~ value_as_number),
    case_when(TRUE ~ NA_real_)),
  value_as_character_fn = if_else(type == "character", case_when(TRUE ~
    value_as_character), case_when(TRUE ~ NA_character_)),
  value_as_logical_fn = if_else(type == "logical", case_when(TRUE ~ value_as_logical),
    case_when(TRUE ~ as.logical(NA))),
  unit_rescale_fn = case_when(TRUE ~ value_as_number),
  unit_relabel_fn = case_when(TRUE ~ unit),
  expect_before = TRUE,
  expect_after = TRUE,
  range_mainly_low = NA,
  range_mainly_high = NA,
  range_discard_below = NA,
  range_discard_above = NA
)

tests_extract(
  x,
  tests_def,
  errors = stop,
  rds_only = FALSE,
  rds_filepath_fn = NULL
)
}
\arguments{
\item{test_def}{A list of existing test definitions to add this to}

\item{symbol}{A short name for the flowsheet item. This should be a
character vector that is suitable to use as an R object name}

\item{title}{The full name for the test item, suitable for using in
figure titles etc}

\item{names_cuh}{The names of the test (\code{TestName} in raw format) for tests
to include from CUH}

\item{names_external}{The names of the test (\code{TestName} in raw format) for
tests to include from external sources. NOTE CURRENTLY WE DON'T INCLUDE
EXTERNAL TESTS AT ALL.}

\item{search_pattern}{A charater vector of potential synonymns for this
test, in case new names (\code{TestName} in raw format) for the
same test are added in future.}

\item{search_exclude}{A character vector of test names
(\code{TestName} in raw format) that are known NOT to be relevant to this test.}

\item{search_exclude_group}{A character vector of test group names
(\code{TestGroupName} in raw format) that are known NOT to be relevant to
this test.}

\item{type}{Whether flowsheet item is a number or a string. Either
\code{"numeric"} or \code{"character"}}

\item{silently_exclude_na_when}{An expression that returns a logical value,
specifying the circumstances when \code{NA} values should be automatically
excluded.}

\item{silently_exclude_when}{An expression that returns a logical value,
specifying the circumstances when values should be automatically
excluded}

\item{censoring_fn}{A function specifying the value of the \code{censoring} column}

\item{value_as_number_fn}{A function specifying how to generate the
\code{value_as_number} column}

\item{value_as_character_fn}{A function specifying how to generate the
\code{value_as_character} column}

\item{value_as_logical_fn}{A function specifying how to generate the
\code{value_as_logical} column}

\item{unit_rescale_fn}{A function specifying how to rescale the result
values. By default, does not rescale.}

\item{unit_relabel_fn}{A function specifying how to relabel the units of the
the result values. By default, does not rescale.}

\item{expect_before}{An expression that returns a logical value,
specifying a condition that should be \code{TRUE} in the raw data}

\item{expect_after}{An expression that returns a logical value,
specifying a condition that should be \code{TRUE} in the processed (output) data}

\item{range_mainly_low, range_mainly_high}{An indicative lower and upper range
for most values. Values outside this range are NOT excluded: this is purely
for setting default scales of plots etc}

\item{range_discard_below, range_discard_above}{This pair set the lower and
upper range for the flowsheet item. Values outside this range are
EXCLUDED.}

\item{x}{Test data in tidy-column-name format (after applying
\code{tests_rename})}

\item{tests_def}{A tests definition}

\item{errors}{A function indicating what to do when an error is found}
}
\value{
A data frame with the following columns:
\code{person_id}, \code{symbol}, \code{value_as_number}, \code{value_as_character},
\code{value_as_logical}, \code{censoring}, \code{ordered_datetime}, \code{collected_datetime},
\code{received_datetime}, \code{result_datetime}, \code{ordering_department_name},
\code{range_low}, \code{range_high}, \code{unit}, \code{name}, \code{title}, \code{method}, \code{group},
\code{type}

The result will be sorted by collected_datetime
}
\description{
Add a new definition of a test item

Extract tests data into tidy format
}
\examples{
tests_raw_example <-
  read_tidybrookes_csv(
    file = tidybrookes_example("tests.csv"),
    col_types = "tests") \%>\%
    tests_rename

tests_def <- list() \%>\%
  tests_add(
    symbol = "magnesium",
    title = "Magnesium",
    names_cuh = c("MAGNESIUM"),
    names_external = "EXT MAGNESIUM",
    search_pattern = c("magnesium", "mg"),
    search_exclude = c("ETOH MG/100ML",
                       "RETIRED-ETOH MG/100ML",
                       "RIST 0.2MG/ML",
                       "RIST 0.77MG/ML",
                       "RISTOCETIN 0.5MG/ML",
                       "RISTOCETIN 1.5MG/ML"),
    silently_exclude_na_when = FALSE,
    censoring_fn = case_when(value_original == "<0.29" ~ "left", # very low
                             TRUE ~ NA_character_),
    value_as_number_fn = case_when(value_original == "<0.29" ~ 0.29,
                                   TRUE ~ value_as_number),
    expect_before = (unit == "mmol/L"),
    range_mainly_low = 0.4,
    range_mainly_high = 1.2,
    range_discard_above = 1.8)

tests_raw_example \%>\% filter(name == "MAGNESIUM")

# Note that
# - the high value of 3.0 is deleted because it is above
#   range_discard_above
# - note that the censored value "<0.29" is converted to 0.29, and "left"
#   added to the censoring column
tests_extract(tests_raw_example, tests_def)
}
\author{
R.J.B. Goudie
}
