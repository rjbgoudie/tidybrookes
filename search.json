[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"/articles/tidybrookes.html","id":"importing-data-from-csv-or-delimited-data","dir":"Articles","previous_headings":"","what":"Importing data from CSV or delimited data","title":"Introduction to tidybrookes","text":"standard data format exported CUH clinical informatics can imported R using read_tidybrookes_csv() read_tidybrookes_delim(), wrappers around readr::read_delim() defaults set suit formats usually used CUH. raw data, column names inconsistent, making difficult remember. collection *_rename functions (adm_rename(), fsheet_rename() etc) rename columns consistent standardised names. functions tidybrookes assume column names used. Similar functions available clinical tables, e.g. flowsheet data:","code":"adm_file_path <- tidybrookes_example(\"adm.csv\") adm_raw <- read_tidybrookes_csv(file = adm_file_path, col_types = \"adm\") adm_raw <- adm_rename(adm_raw) fsheet_file_path <- tidybrookes_example(\"fsheet.csv\") fsheet_raw <- read_tidybrookes_csv(file = fsheet_file_path,                                    col_types = \"fsheet\") %>%   fsheet_rename()"},{"path":"/articles/tidybrookes.html","id":"defining-and-extracting-clinical-fields","dir":"Articles","previous_headings":"","what":"Defining and extracting clinical fields","title":"Introduction to tidybrookes","text":"key aspect tidybrookes standardised way defining clinical fields extracted cleaned. approach taken tidybrookes closer ‘declarative’ approach rather ‘procedural’ approach: ‘procedural’ approach involve describing explicit sequence steps used extract clean clinical field. usual way code written R, makes easier forget steps, encourages ‘copy-paste’ style coding, can error prone. ‘declarative’ approach instead involves ‘describing’ clinical field. tidybrookes approach describe clinical field, along standard set fields small functions describe field extracted cleaned. Descriptions created using *_add functions, fsheet_add(). example, flowsheet description National Early Warning Score 2 (NEWS2) follows: list descriptions created, definitions applied raw data extract clean data:","code":"fsheet_def <- list() %>%   fsheet_add(     symbol = \"news2\",     title = \"NEWS2\",     names = c(\"NEWS2 score\"),     search_pattern = c(\"news2\", \"news\"),     search_exclude = c(),     silently_exclude_na_when = TRUE,     silently_exclude_when =       (value_original == \" \" |          value_original == \"E\" # some kind of typo       ),     value_as_number_fn =       case_when(value_original == \"3mm\" ~ 3,                 TRUE ~ value_as_number),     expect_after =       (value_as_number %in% 0:17)) fsheet_data <- fsheet_extract(fsheet_raw_example, fsheet_def) #> ℹ Extracting NEWS2 (news2) #> ℹ 13 rows of raw data #> ℹ 1 row labelled since value was NA #> ℹ 12 rows extracted"},{"path":"/articles/tidybrookes.html","id":"annotation-of-admission-adm-and-admission-discharge-transfer-adt-data","dir":"Articles","previous_headings":"","what":"Annotation of admission (adm) and admission-discharge-transfer (adt) data","title":"Introduction to tidybrookes","text":"Admission data can annotated using adm_annotate():","code":"adm_data_example <- adm_annotate(adm_raw)"},{"path":"/articles/tidybrookes.html","id":"summarising-and-joining-data-from-separate-clinical-data-tables","dir":"Articles","previous_headings":"","what":"Summarising and joining data from separate clinical data tables","title":"Introduction to tidybrookes","text":"may wish extract, example, NEWS2 measurements hospital visit; may wish extract first NEWS2 measurement hospital visit. requires linking admission data clinical field tables. can done using functions first_during() all_during(). example, extract first NEWS2 measurement hospital visit:","code":"adm_data_example %>%   first_during(fsheet_data,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [10ms] #>  #> ℹ Extracting all duringℹ Joining tables #> ✔ Joining tables [27ms] #>  #> ℹ Extracting all during✔ Extracting all during [61ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [20ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [18ms] #>  #> ℹ Pivoting widerℹ Pivoting wider #> ✔ Pivoting wider [56ms] #>  #> ℹ Pivoting widerℹ Relocating columns #> ✔ Relocating columns [29ms] #>  #> ℹ Pivoting wider✔ Pivoting wider [126ms] #> # A tibble: 5 × 6 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_first_during_visit_datetime news2_first_during_visit #>   <chr>      <int64> <dttm>               <dttm>              <dttm>                                               <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 09:00:00                                      3 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 11:30:00                                      3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-21 09:30:00                                      3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-01 08:59:00                                      5 #> # ℹ 1 more row"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R.J.B Goudie. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goudie R (2025). tidybrookes: CUH clinical informatic data extraction analysis tools. R package version 0.1.","code":"@Manual{,   title = {tidybrookes: CUH clinical informatic data extraction and analysis tools},   author = {R.J.B Goudie},   year = {2025},   note = {R package version 0.1}, }"},{"path":"/index.html","id":"tidybrookes","dir":"","previous_headings":"","what":"CUH clinical informatic data extraction and analysis tools","title":"CUH clinical informatic data extraction and analysis tools","text":"tidybrookes designed make easy extract, clean manipulate clinical informatics data Cambridge University Hospitals reliable consistent way. provides functions loading, cleaning, quality checking, joining, summarising plotting.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CUH clinical informatic data extraction and analysis tools","text":"","code":"# Install development version from GitHub # install.packages(\"pak\") pak::pak(\"rjbgoudie/tidybrookes\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"CUH clinical informatic data extraction and analysis tools","text":"Get started vignette(\"tidybrookes\").","code":""},{"path":"/reference/adjacent_event_during.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract first measurement after/last measurement before a specific event, during a timeperiod — first_during_after_event","title":"Extract first measurement after/last measurement before a specific event, during a timeperiod — first_during_after_event","text":"Extract last measurement first measurement specific event, timepoint.","code":""},{"path":"/reference/adjacent_event_during.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract first measurement after/last measurement before a specific event, during a timeperiod — first_during_after_event","text":"","code":"first_during_after_event(..., event_datetime, names_suffix = \"\")  last_during_before_event(..., event_datetime, names_suffix = \"\")"},{"path":"/reference/adjacent_event_during.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract first measurement after/last measurement before a specific event, during a timeperiod — first_during_after_event","text":"... Arguments passed summarise_during x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\" event_datetime datetime extraction relative . names_suffix text label use end column name created.","code":""},{"path":"/reference/adjacent_event_during.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract first measurement after/last measurement before a specific event, during a timeperiod — first_during_after_event","text":"","code":"#' # raw data that we will combine adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       # extract the first NEWS2 record during each hospital visit first_news2 <- adm_data_example %>%   first_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [16ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [28ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [75ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [22ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [17ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [37ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [137ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [213ms] #>   # extract the first SpO2 measurement that FOLLOW the first NEWS2 record # during each hospital visit first_news2 %>%  first_during_after_event(fsheet_spo2_example,                           datetime = measurement_datetime,                           during = \"during_visit\",                           event_datetime = news2_first_during_visit_datetime,                           names_suffix = \"first_news2\") %>%   select(person_id,          visit_id,          contains(\"spo2\"),          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> Error in if (head10_all_midnight) {    head1000_all_midnight <- is_all_midnight(head(x, n = 1000),         {            {                datetime            }        })    if (head1000_all_midnight) {        all_midnight <- is_all_midnight(x, {            {                datetime            }        })        if (all_midnight) {            cli::cli_alert_danger(c(\"Supplied datetime column is all midnight - \",                 \"did you mean to use _date?\"))        }    }}: the condition has length > 1 #> ✖ Checking datetime is not all midnight [10ms] #>  #> ℹ Extracting all during #> ✖ Extracting all during [23ms] #>   # extract the LAST SpO2 measurement that is before (or the same time as) # the first NEWS2 record during each hospital visit first_news2 %>%  last_during_before_event(fsheet_spo2_example,                           datetime = measurement_datetime,                           during = \"during_visit\",                           event_datetime = news2_first_during_visit_datetime,                           names_suffix = \"first_news2\") %>%   select(person_id,          visit_id,          contains(\"spo2\"),          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> Error in if (head10_all_midnight) {    head1000_all_midnight <- is_all_midnight(head(x, n = 1000),         {            {                datetime            }        })    if (head1000_all_midnight) {        all_midnight <- is_all_midnight(x, {            {                datetime            }        })        if (all_midnight) {            cli::cli_alert_danger(c(\"Supplied datetime column is all midnight - \",                 \"did you mean to use _date?\"))        }    }}: the condition has length > 1 #> ✖ Checking datetime is not all midnight [10ms] #>  #> ℹ Extracting all during #> ✖ Extracting all during [23ms] #>"},{"path":"/reference/adm_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic checks and annotation of ADM data — adm_annotate","title":"Basic checks and annotation of ADM data — adm_annotate","text":"Performs basic checks annotation ADM data.","code":""},{"path":"/reference/adm_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic checks and annotation of ADM data — adm_annotate","text":"","code":"adm_annotate(x)"},{"path":"/reference/adm_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic checks and annotation of ADM data — adm_annotate","text":"x tidied adm data frame, tidied adm_rename()","code":""},{"path":"/reference/adm_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic checks and annotation of ADM data — adm_annotate","text":"supplied data frame x additional annotations","code":""},{"path":"/reference/adm_annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic checks and annotation of ADM data — adm_annotate","text":"Checks gender data known values (Female, Male Unknown) Annotates row visit_length_days: length stay (days) person_id_short: shortened person_id created using person_id_shorten()","code":""},{"path":[]},{"path":"/reference/adm_annotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic checks and annotation of ADM data — adm_annotate","text":"R.J.B. Goudie","code":""},{"path":"/reference/adm_annotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic checks and annotation of ADM data — adm_annotate","text":"","code":"adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days adm_annotate(adm_data_example) %>%   relocate(visit_length_days, person_id_short) #> # A tibble: 5 × 16 #>   visit_length_days person_id_short person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity   death_date age_at_visit_start adm_service        ward           discharge_destination #>               <dbl> <chr>           <chr>        <int> <dttm>               <dttm>              <chr>  <chr>       <dttm>                  <int> <chr>              <chr>          <chr>                 #> 1             2.38  A               AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r\\n\" NA                         45 Emergency Medicine EMERGENCY DEP… 0                     #> 2             2.29  A               AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r\\n\" NA                         45 Emergency Medicine EMERGENCY DEP… 0                     #> 3            12.4   B               BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r\\n\" NA                         12 Nephrology         DIALYSIS CENT… 1                     #> 4            31.4   C               CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r\\n\" NA                         50 Emergency Medicine EMERGENCY DEP… 0                     #> 5             0.417 C               CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r\\n\" NA                         50 Emergency Medicine EMERGENCY DEP… 0                     #> # ℹ 3 more variables: discharged_deceased <chr>, readmitted_within_30_days <chr>, visit_length_hours <dbl>"},{"path":"/reference/adt_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"Performs basic cleanup, checks annotation ADT data indexes hospital visit (visit_index) visit departments (department_visit_index), basic labels department.","code":""},{"path":"/reference/adt_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"","code":"adt_annotate(x, fixed_labels, annotate_fn)"},{"path":"/reference/adt_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"x Tidy ADT data, tidied adt_rename() fixed_labels data frame colum department, joined ADT data annotate_fn function provides additional annotation","code":""},{"path":"/reference/adt_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"supplied tidy ADT data x additional annotations","code":""},{"path":"/reference/adt_annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"clean checks performed : Removes duplicate rows Checks discharge dates identical within visit annotations added : Labels hospital visits via visit_index Adds end_datetime row ADT (always included raw data) Labels visits specific departments. visit single department may involve multiple rows ADT data, since patient may move beds within department one times. visits labelled department_visit_index, corresponding times recorded department_start_datetime department_end_datetime, department_length_days. (Left) joins fixed_labels Runs user-supplied annotation function annotate_fn","code":""},{"path":[]},{"path":"/reference/adt_annotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"R.J.B. Goudie","code":""},{"path":"/reference/adt_annotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic cleanup, checks, and annotation of ADT data — adt_annotate","text":"","code":"fixed_labels <-   tibble::tribble(     ~department, ~is_ed,     \"ADD EMERGENCY DEPT\", TRUE,     \"ADD C2 WARD\", FALSE,     \"ADD D2 WARD\", FALSE,     \"DIALYSIS CENTRE\", FALSE,     \"ADD A1 WARD\", FALSE,     \"ADD A2 WARD\", FALSE,     \"ADD A3 WARD\", FALSE,     \"ADD A4 WARD\", FALSE,     \"ADD X WARD\", FALSE,     \"ADD Y WARD\", FALSE,     \"ADD Z WARD\", FALSE)  adt_data_example <-   read_tidybrookes_csv(     file = tidybrookes_example(\"adt.csv\"),     col_types = \"adt\"   ) %>%   adt_rename #> Warning: One or more parsing issues, call `problems()` on your data frame for details, e.g.: #>   dat <- vroom(...) #>   problems(dat)  adt_data_example %>%   adt_annotate(annotate_fn = identity,                fixed_labels = fixed_labels) #> # A tibble: 22 × 16 #>    person_id visit_id event_type  visit_index start_datetime      end_datetime        discharge_datetime  department     room  bed   department_just_moved department_visit_index department_start_dat…¹ #>    <chr>      <int64> <chr>             <int> <dttm>              <dttm>              <dttm>              <chr>          <chr> <chr> <lgl>                                  <int> <dttm>                 #>  1 CC               4 Admission             1 2021-01-01 08:00:00 2021-01-01 09:00:00 2021-02-01 18:00:00 ADD EMERGENCY… NA    A-01  TRUE                                       1 2021-01-01 08:00:00    #>  2 AA               1 Admission             1 2021-01-01 09:00:00 2021-01-01 12:00:00 2021-01-03 18:00:00 ADD EMERGENCY… NA    A-01  TRUE                                       1 2021-01-01 09:00:00    #>  3 CC               4 Transfer In           1 2021-01-01 09:00:00 2021-01-05 09:00:00 2021-02-01 18:00:00 ADD X WARD     NA    X-01  TRUE                                       2 2021-01-01 09:00:00    #>  4 AA               1 Transfer In           1 2021-01-01 12:00:00 2021-01-02 09:00:00 2021-01-03 18:00:00 ADD C2 WARD    NA    B-01  TRUE                                       2 2021-01-01 12:00:00    #>  5 AA               1 Transfer In           1 2021-01-02 09:00:00 2021-01-03 18:00:00 2021-01-03 18:00:00 ADD C2 WARD    NA    B-02  FALSE                                      2 2021-01-01 12:00:00    #>  6 AA               1 Discharge             1 2021-01-03 18:00:00 NA                  2021-01-03 18:00:00 NA             NA    NA    TRUE                                       3 2021-01-03 18:00:00    #>  7 CC               4 Transfer In           1 2021-01-05 09:00:00 2021-01-10 09:00:00 2021-02-01 18:00:00 ADD X WARD     NA    X-02  FALSE                                      2 2021-01-01 09:00:00    #>  8 AA               2 Admission             2 2021-01-05 11:00:00 2021-01-05 12:00:00 2021-01-07 18:00:00 ADD EMERGENCY… NA    A-01  TRUE                                       1 2021-01-05 11:00:00    #>  9 AA               2 Transfer In           2 2021-01-05 12:00:00 2021-01-07 18:00:00 2021-01-07 18:00:00 ADD D2 WARD    NA    D-01  TRUE                                       2 2021-01-05 12:00:00    #> 10 AA               2 Discharge             2 2021-01-07 18:00:00 NA                  2021-01-07 18:00:00 NA             NA    NA    TRUE                                       3 2021-01-07 18:00:00    #> # ℹ 12 more rows #> # ℹ abbreviated name: ¹​department_start_datetime #> # ℹ 3 more variables: department_end_datetime <dttm>, department_length_days <dbl>, is_ed <lgl>"},{"path":"/reference/all_during.html","id":null,"dir":"Reference","previous_headings":"","what":"Join adm data with other (standardised) data — all_during","title":"Join adm data with other (standardised) data — all_during","text":"Joins adm data frame another data frame (person_id linking relevant datetime called datetime), filter rows y datetime within specified time period.","code":""},{"path":"/reference/all_during.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join adm data with other (standardised) data — all_during","text":"","code":"all_during(   x,   y,   datetime,   during,   names_from = \"symbol\",   join = \"inner\",   arrange = TRUE )"},{"path":"/reference/all_during.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join adm data with other (standardised) data — all_during","text":"x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\" names_from character vector containing names columns used filter (addition implied ). join Either \"left\", left join performed (x rows returned, even correspoding y) \"inner\", inner join performed (x rows least one y row returned)","code":""},{"path":"/reference/all_during.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join adm data with other (standardised) data — all_during","text":"data frame, row y measurement relevant time period patient. Note rows adm data repeated multiple times (one y measurement data point).","code":""},{"path":[]},{"path":"/reference/all_during.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join adm data with other (standardised) data — all_during","text":"R.J.B. Goudie","code":""},{"path":"/reference/all_during.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join adm data with other (standardised) data — all_during","text":"","code":"adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       all_during(adm_data_example,            fsheet_news2_example,            datetime = measurement_datetime,            during = \"during_visit\") %>%   select(person_id, visit_id, symbol, datetime, value_as_number) #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Joining tables #> ✔ Joining tables [27ms] #>  #> Error in select(., person_id, visit_id, symbol, datetime, value_as_number): Can't select columns that don't exist. #> ✖ Column `datetime` doesn't exist."},{"path":"/reference/coarsen_by_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Coarsen by day — coarsen_by_day","title":"Coarsen by day — coarsen_by_day","text":"Coarsen day","code":""},{"path":"/reference/coarsen_by_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coarsen by day — coarsen_by_day","text":"","code":"coarsen_by_day(x)"},{"path":"/reference/condition_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a Diagnosis PL item — condition_add","title":"Add a new definition of a Diagnosis PL item — condition_add","text":"Add new definition Diagnosis PL item Extract condition data tidy format","code":""},{"path":"/reference/condition_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a Diagnosis PL item — condition_add","text":"","code":"condition_add(   condition_def,   symbol,   title,   icd10 = NA,   condition_start_datetime_fn = case_when(!is.na(diagnosis_datetime) ~     diagnosis_datetime, !is.na(entered_datetime) ~ entered_datetime, TRUE ~ ymd_hms(NA)),   condition_end_datetime_fn = case_when(!is.na(resolved_datetime) ~ resolved_datetime,     TRUE ~ ymd_hms(NA)),   silently_exclude_deleted_when = TRUE,   silently_exclude_resolved_when = FALSE )  condition_extract(x, condition_def, errors = stop)"},{"path":"/reference/condition_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a Diagnosis PL item — condition_add","text":"condition_def condition definition symbol short name condition item. character vector suitable use R object name title full name condition item, suitable using figure titles etc x condition data tidy-column-name format (applying condition_rename) errors function indicating error found icd_10 vector ICD-10 codes use. silently_exclude_deleted TRUE, diagnoses status = \"Deleted\" removed data frame. theory, diagnoses made error deleted, practice thought clinical staff often delete diagnoses resolved rather mark \"Resolved\".","code":""},{"path":"/reference/condition_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a Diagnosis PL item — condition_add","text":"data frame following columns: person_id, symbol, value_as_number, value_as_character, censoring, ordered_datetime, collected_datetime, received_datetime, result_datetime, ordering_department_name, range_low, range_high, unit, name, title, method, group, type result sorted diagnosis_datetime","code":""},{"path":"/reference/condition_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a Diagnosis PL item — condition_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count functions — n_person","title":"Count functions — n_person","text":"Count functions","code":""},{"path":"/reference/count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count functions — n_person","text":"","code":"n_person(x)  n_symbol(x)"},{"path":"/reference/curtail_infusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Curtail infusions — curtail_infusions","title":"Curtail infusions — curtail_infusions","text":"Curtail infusions","code":""},{"path":"/reference/curtail_infusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curtail infusions — curtail_infusions","text":"","code":"curtail_infusions(x, infusion_bag_size)"},{"path":"/reference/db_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from Epic in delimited format (including CSV) into a database — db_write_tidybrookes_csv","title":"Load data from Epic in delimited format (including CSV) into a database — db_write_tidybrookes_csv","text":"Reads data chunked manner, writes database using DBI::dbWriteTable","code":""},{"path":"/reference/db_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from Epic in delimited format (including CSV) into a database — db_write_tidybrookes_csv","text":"","code":"db_write_tidybrookes_csv(   file,   connection,   table_name,   col_types,   na = c(\"\", \"NA\"),   quote = \"\\\"\",   progress = TRUE )  db_write_tidybrookes_delim(   file,   connection,   table_name,   col_types,   na = c(\"\", \"NA\"),   quote = \"\\\"\",   ... )"},{"path":"/reference/db_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from Epic in delimited format (including CSV) into a database — db_write_tidybrookes_csv","text":"file Either path file, connection, literal data (either single string raw vector), per readr::read_delim() connection DBIConnection object, returned DBI::dbConnect() table_name table name, passed DBI::dbWriteTable() col_types Either string specifying name table data comes , standard format can used. Available values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology. translated column specification using default_col_types. readr::cols() format list column names types, can used nonstandard data format supplied. na Character vector strings interpret missing values. Set option character() indicate missing values. quote Single character used quote strings","code":""},{"path":"/reference/default_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard column specifications — default_col_types","title":"Standard column specifications — default_col_types","text":"Maps table names standard readr::cols() specifications can used importing data using read_tidybrookes_csv() read_tidybrookes_delim().","code":""},{"path":"/reference/default_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard column specifications — default_col_types","text":"","code":"default_col_types(col_types)"},{"path":"/reference/default_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard column specifications — default_col_types","text":"col_types Either string specifying name table data comes , standard format can used. Available value \"adm\", \"adt\", \"demogs\", \"fsheet\", \"fsheet_io\", \"tests\", \"med_admin\", \"med_prescr\", \"diagnosis_pl\", \"med_hist\", readr::cols() format list column names types, can used nonstandard data format supplied.","code":""},{"path":"/reference/default_col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard column specifications — default_col_types","text":"readr::cols() specification.","code":""},{"path":[]},{"path":"/reference/default_col_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard column specifications — default_col_types","text":"","code":"# the format when col_types = \"adm\" default_col_types(\"adm\") #> Error in cols[[i]] <- switch(fname, col_skip = , col_guess = cols[[i]],     col_character = , col_factor = crayon::red(cols[[i]]), col_logical = crayon::yellow(cols[[i]]),     col_double = , col_integer = , col_number = crayon::green(cols[[i]]),     col_date = , col_datetime = , col_time = crayon::blue(cols[[i]])): replacement has length zero  default_col_types(\"tests\") #> Error in cols[[i]] <- switch(fname, col_skip = , col_guess = cols[[i]],     col_character = , col_factor = crayon::red(cols[[i]]), col_logical = crayon::yellow(cols[[i]]),     col_double = , col_integer = , col_number = crayon::green(cols[[i]]),     col_date = , col_datetime = , col_time = crayon::blue(cols[[i]])): replacement has length zero"},{"path":"/reference/dose_in_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose in grid — dose_in_grid","title":"Dose in grid — dose_in_grid","text":"Dose grid","code":""},{"path":"/reference/dose_in_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose in grid — dose_in_grid","text":"","code":"dose_in_grid(.x, .progress = NULL)"},{"path":"/reference/duckdb_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from CUH in delimited (including CSV) format into duckdb — duckdb_read_tidybrookes_csv","title":"Load data from CUH in delimited (including CSV) format into duckdb — duckdb_read_tidybrookes_csv","text":"Convenience wrapper makes easier set col_types standard data CUH loading duckdb.","code":""},{"path":"/reference/duckdb_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from CUH in delimited (including CSV) format into duckdb — duckdb_read_tidybrookes_csv","text":"","code":"duckdb_read_tidybrookes_csv(   src,   table,   file,   col_types = table,   na = c(\"\", \"NA\"),   quote = \"\\\"\",   table_name = paste0(table, \"_raw_unrenamed\"),   strict_mode = TRUE,   append = FALSE )"},{"path":"/reference/duckdb_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from CUH in delimited (including CSV) format into duckdb — duckdb_read_tidybrookes_csv","text":"src DBIConnection object produced duckdb_tidybrookes_connect DBI::dbConnect() table string specifying name table data comes , standard format can used. Available values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology. translated column specification using default_col_types. file path CSV file col_types Either string specifying name table data comes , standard format can used. Available values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology. translated column specification using default_col_types. readr::cols() format list column names types, can used nonstandard data format supplied. na Character vector strings interpret missing values. Set option character() indicate missing values. quote Single character used quote strings table_name name use table duckdb strict_mode duckdb's strict mode loading CSVs used? append new data appended end existing table database?","code":""},{"path":"/reference/duckdb_read.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load data from CUH in delimited (including CSV) format into duckdb — duckdb_read_tidybrookes_csv","text":"R.J.B. Goudie","code":""},{"path":"/reference/duckdb_tidybrookes_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"wrapper around DBI::dbConnect() sets suitable defaults use tidybrookes datasets: uses bit64 integer64 representation big integers, since IDs EHRs can larger can represented standard integers representing floats/doubles incorrect Since duckdb support timezone great R currently, store datetimes UTC duckdb force conversion local time export duckdb.","code":""},{"path":"/reference/duckdb_tidybrookes_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"","code":"duckdb_tidybrookes_connect(   db_dir = \"\",   bigint = \"integer64\",   timezone_out = \"Europe/London\",   tz_out_convert = \"force\",   temp_dir = NULL )"},{"path":"/reference/duckdb_tidybrookes_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"db_dir Location database files. path existing directory file system. default (\"\"), data kept RAM. timezone_out time zone returned R, defaults \"UTC\", currently timezone supported duckdb. want display datetime values local timezone, set Sys.timezone() \"\". tz_out_convert convert timestamp columns timezone specified timezone_out. two options: \"\", \"force\". \"\" chosen, timestamp returned appear specified time zone. \"force\" chosen, timestamp clock time timestamp database, new time temp_dir Set directory duckdb write temp files. data stored slow network drives, may much faster set faster local drive.","code":""},{"path":"/reference/duckdb_tidybrookes_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"Facility specify temp_directory duckdb also provided","code":""},{"path":"/reference/duckdb_tidybrookes_connect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"R.J.B. Goudie","code":""},{"path":"/reference/duckdb_tidybrookes_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to duckdb database with suitable defaults — duckdb_tidybrookes_connect","text":"","code":"if (FALSE) { # \\dontrun{ con <- duckdb_tidybrookes_connect() } # }"},{"path":"/reference/during_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract first or last measurement during a timeperiod — first_during","title":"Extract first or last measurement during a timeperiod — first_during","text":"Extract first measurement last measurement timeperiod.","code":""},{"path":"/reference/during_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract first or last measurement during a timeperiod — first_during","text":"","code":"first_during(...)  last_during(...)"},{"path":"/reference/during_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract first or last measurement during a timeperiod — first_during","text":"... Arguments passed summarise_during x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\"","code":""},{"path":"/reference/during_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract first or last measurement during a timeperiod — first_during","text":"","code":"# raw data that we will combine adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       # extract the first of each fsheet symbol during the hospital visit adm_data_example %>%   first_during(fsheet_news2_example,                datetime = measurement_datetime,                during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [22ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [51ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [18ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [19ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [35ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [18ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [93ms] #>  #> # A tibble: 5 × 6 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_first_during_visit_datetime news2_first_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                               <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 09:00:00                                      3 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 11:30:00                                      3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-21 09:30:00                                      3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-01 08:59:00                                      5 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                      NA  # extract the last of each fsheet symbol during the hospital visit adm_data_example %>%  last_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [21ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [42ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [17ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [35ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [18ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [92ms] #>  #> # A tibble: 5 × 6 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_last_during_visit_datetime news2_last_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                             <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 12:30:00                                    4 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-06 10:30:00                                    3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-23 09:00:00                                    3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-04 09:00:00                                    6 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                    NA  # can pipe together two summaries adm_data_example %>%   first_during(fsheet_news2_example,                datetime = measurement_datetime,                during = \"during_visit\") %>%   last_during(fsheet_news2_example,               datetime = measurement_datetime,               during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [8ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [21ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [43ms] #>  #> ℹ Checking datetime is not all midnight #> ℹ Summarising/slicing #> ✔ Summarising/slicing [24ms] #>  #> ℹ Checking datetime is not all midnight #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [35ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [25ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [96ms] #>  #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [178ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [22ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [214ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [23ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [15ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [36ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [19ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [102ms] #>  #> # A tibble: 5 × 8 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_first_during_visit_datetime news2_first_during_visit news2_last_during_visit_datetime news2_last_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                               <dbl> <dttm>                                             <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 09:00:00                                      3 2021-01-01 12:30:00                                    4 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 11:30:00                                      3 2021-01-06 10:30:00                                    3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-21 09:30:00                                      3 2021-01-23 09:00:00                                    3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-01 08:59:00                                      5 2021-01-04 09:00:00                                    6 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                      NA NA                                                    NA  # example data with 3 fsheet data fields fsheet_example #> # A tibble: 26 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> # ℹ 16 more rows  # summaries for all symbols can be calculated together adm_data_example %>%   first_during(fsheet_example,                datetime = measurement_datetime,                during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"during\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [14ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [22ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [51ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [20ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [16ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [42ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [19ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [99ms] #>  #> # A tibble: 5 × 10 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_first_during_vi…¹ news2_first_during_v…² spo2_first_during_vi…³ spo2_first_during_vi…⁴ weight_first_during_…⁵ weight_first_during_…⁶ #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                   <dbl> <dttm>                                  <dbl> <dttm>                                  <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 09:00:00                          3 2021-01-01 10:59:00                        96 2021-01-03 17:00:00                      117. #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 11:30:00                          3 2021-01-05 11:30:00                        96 NA                                        NA  #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-21 09:30:00                          3 2021-01-21 09:15:00                        93 2021-01-20 09:00:00                      114. #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-01 08:59:00                          5 NA                                         NA NA                                        NA  #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                          NA NA                                         NA NA                                        NA  #> # ℹ abbreviated names: ¹​news2_first_during_visit_datetime, ²​news2_first_during_visit, ³​spo2_first_during_visit_datetime, ⁴​spo2_first_during_visit, ⁵​weight_first_during_visit_datetime, #> #   ⁶​weight_first_during_visit"},{"path":"/reference/extremes_during.html","id":null,"dir":"Reference","previous_headings":"","what":"Extremes during — max_during","title":"Extremes during — max_during","text":"Extremes ","code":""},{"path":"/reference/extremes_during.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extremes during — max_during","text":"","code":"max_during(...)  min_during(...)"},{"path":"/reference/extremes_during.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extremes during — max_during","text":"... Arguments passed summarise_during x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\"","code":""},{"path":"/reference/extremes_during.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extremes during — max_during","text":"","code":"# raw data that we will combine adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       # extract the max of each fsheet symbol during the hospital visit adm_data_example %>%   max_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [27ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [50ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [19ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [40ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [18ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [91ms] #>  #> # A tibble: 5 × 6 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_max_during_visit_datetime news2_max_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                           <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 12:30:00                                  4 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 16:30:00                                  6 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-22 12:30:00                                  4 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-03 17:00:00                                  7 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                  NA  # extract the min of each fsheet symbol during the hospital visit adm_data_example %>%  min_during(fsheet_news2_example,             datetime = measurement_datetime,             during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [21ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [48ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [17ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [20ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [37ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [19ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [98ms] #>  #> # A tibble: 5 × 6 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_min_during_visit_datetime news2_min_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                           <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 09:00:00                                  3 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 11:30:00                                  3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-21 09:30:00                                  3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-01 08:59:00                                  5 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                  NA  # can pipe together two summaries adm_data_example %>%   max_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   min_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [22ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [45ms] #>  #> ℹ Checking datetime is not all midnight #> ℹ Summarising/slicing #> ✔ Summarising/slicing [140ms] #>  #> ℹ Checking datetime is not all midnight #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [35ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [19ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [89ms] #>  #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [293ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [27ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [335ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [22ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [35ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [19ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [93ms] #>  #> # A tibble: 5 × 8 #>   person_id visit_id visit_start_datetime visit_end_datetime  news2_max_during_visit_datetime news2_max_during_visit news2_min_during_visit_datetime news2_min_during_visit #>   <chr>        <int> <dttm>               <dttm>              <dttm>                                           <dbl> <dttm>                                           <dbl> #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 2021-01-01 12:30:00                                  4 2021-01-01 09:00:00                                  3 #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 2021-01-05 16:30:00                                  6 2021-01-05 11:30:00                                  3 #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 2021-01-22 12:30:00                                  4 2021-01-21 09:30:00                                  3 #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 2021-01-03 17:00:00                                  7 2021-01-01 08:59:00                                  5 #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 NA                                                  NA NA                                                  NA"},{"path":"/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"General convenience functions for filtering — filter_person","title":"General convenience functions for filtering — filter_person","text":"Convenience functions filter data person_id (using filter_person()), visit_id (using filter_visit()), test name (using filter_tests()), drug name (using filter_med_prescr()); type data (numerical, logical character).","code":""},{"path":"/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General convenience functions for filtering — filter_person","text":"","code":"filter_person(x, pattern)  filter_visit(x, id)  filter_tests(x, pattern)  filter_med_prescr(x, pattern)  filter_numeric(x)  filter_logical(x)  filter_character(x)"},{"path":"/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General convenience functions for filtering — filter_person","text":"x data frame relevant column (e.g. person_id visit_id) pattern pattern search case insensitive manner (passed stringr::coll() ignore_case = TRUE. id visit id (either numeric character)","code":""},{"path":"/reference/filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General convenience functions for filtering — filter_person","text":"","code":"# Filtering is case insensitive filter_person(adm_data_example, \"A\") #> # A tibble: 2 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days filter_person(adm_data_example, \"a\") #> # A tibble: 2 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days  # can filter visits by visit_id filter_visit(adm_data_example, 4) #> # A tibble: 1 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days filter_visit(adm_data_example, \"4\") #> # A tibble: 1 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days"},{"path":"/reference/fsheet_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add annotations to fsheet data — fsheet_annotate","title":"Add annotations to fsheet data — fsheet_annotate","text":"Annotate fsheet data note rows excluded etc.","code":""},{"path":"/reference/fsheet_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add annotations to fsheet data — fsheet_annotate","text":"","code":"fsheet_annotate(x, fsheet_def, annotation_db = NULL)"},{"path":"/reference/fsheet_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add annotations to fsheet data — fsheet_annotate","text":"x Flowsheet data renamed format (applying fsheet_rename) fsheet_def fsheet definition, list fsheet definitions annotation_db Either NULL tbl reference annotations database table annotations stored . NULL annotations added x additional columns.","code":""},{"path":"/reference/fsheet_annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add annotations to fsheet data — fsheet_annotate","text":"Annotations can either added additional columns (annotation_db = NULL), stored separate database table (setting annotation_db database tbl). Note adding annotations additiona columns, result sorted, since left original order x","code":""},{"path":"/reference/fsheet_annotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add annotations to fsheet data — fsheet_annotate","text":"R.J.B. Goudie","code":""},{"path":"/reference/fsheet_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add and extract flowsheet items — fsheet_add","title":"Add and extract flowsheet items — fsheet_add","text":"fsheet_add creates new \"fsheet definition\", specification raw flowsheet data extracted, filtered, cleaned standardised. list specifications can used raw fsheet data using fsheet_extract.","code":""},{"path":"/reference/fsheet_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and extract flowsheet items — fsheet_add","text":"","code":"fsheet_add(   fsheet_def,   symbol,   title,   names = NA,   search_pattern,   search_exclude = NA,   type = \"numeric\",   silently_exclude_na_when = FALSE,   silently_exclude_when = FALSE,   censoring_fn = case_when(TRUE ~ NA_character_),   value_as_number_fn = if_else(type == \"numeric\", case_when(TRUE ~ value_as_number),     case_when(TRUE ~ NA_real_)),   value_as_character_fn = if_else(type == \"character\", case_when(TRUE ~     value_as_character), case_when(TRUE ~ NA_character_)),   value_as_logical_fn = if_else(type == \"logical\", case_when(TRUE ~ value_as_logical),     case_when(TRUE ~ as.logical(NA))),   unit_rescale_fn = case_when(TRUE ~ value_as_number),   unit_relabel_fn = case_when(TRUE ~ NA_character_),   coalesce_fn = identity,   coalesce_fn0 = identity,   expect_before = TRUE,   expect_after = TRUE,   range_mainly_low = NA,   range_mainly_high = NA,   range_discard_below = NA,   range_discard_above = NA )  fsheet_extract(   x,   fsheet_def,   errors = stop,   rds_only = FALSE,   rds_filepath_fn = NULL )"},{"path":"/reference/fsheet_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and extract flowsheet items — fsheet_add","text":"fsheet_def list fsheet definitions symbol short name flowsheet item. character vector suitable use R object name title full name flowsheet item, suitable using figure titles etc names character vector display names (disp_name raw format) flowsheet items include search_pattern character vector potential synonymns flowsheet item, case new names (disp_name raw format) item added future. searched raw data potential new names identified, user alerted presence potential new flowsheet names. search_exclude character vector flowsheet item names (disp_name raw format) known relevant flowsheet item. type Whether flowsheet item number string. Either \"numeric\" \"character\" silently_exclude_na_when expression returns logical value, specifying circumstances NA values automatically excluded. silently_exclude_when expression returns logical value, specifying circumstances values automatically excluded censoring_fn function specifying value censoring column value_as_number_fn function specifying generate value_as_number column value_as_character_fn function specifying generate value_as_character column value_as_logical_fn function specifying generate value_as_logical column unit_rescale_fn function specifying rescale flowsheet values. default, rescale unit_relabel_fn function specifying relabel units flowsheet values. default, rescale coalesce_fn function specifying combine measurements exactly time coalesce_fn0 function specifying combine measurements exactly time expect_before expression returns logical value, specifying condition TRUE raw data expect_after expression returns logical value, specifying condition TRUE processed (output) data range_mainly_low, range_mainly_high indicative lower upper range values. Values outside range excluded: purely setting default scales plots etc range_discard_below, range_discard_above pair set lower upper range flowsheet item. Values outside range EXCLUDED. x Flowsheet data renamed format (applying fsheet_rename) errors function indicating error found","code":""},{"path":"/reference/fsheet_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add and extract flowsheet items — fsheet_add","text":"fsheet_add returns list fsheet definitions, new definition added end supplied fsheet_def fsheet_extract returns data frame following columns: person_id, symbol, value_as_character, value_as_number, value_as_logical, censoring, comment, measurement_datetime, name, title, data_id, measurement_id, line_id, template, form, type, unit","code":""},{"path":"/reference/fsheet_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add and extract flowsheet items — fsheet_add","text":"Flowsheet defintiions describe raw data extracted, filtered, cleaned standardised follows: Labelling flowsheet item. Two names/labels required fsheet item: symbol, serves \"R variable name\" item. make symbol quick easy type, work R, recommended lowercase, ideally single words (e.g. \"news2\" \"spo2) title, serves label flowsheet item plots figures. capitalised want item labelled formal documents (e.g. \"NEWS2\" \"SpO2). Extracting relevant flowsheet items specification rows extracted via: names, vector listing labels fsheet items raw data. corresponds column labelled name fsheet_rename, labelled disp_name raw extracts Epic). Additionally, guard potential new names flowsheet items introduced evolution EHR data, search terms potential names flowsheet items (known exclusions) can provided using: search_pattern, vector search terms potential synonyms flowsheet item. list search terms searched whenever flowsheet item extracted, possible new data field identified, alerted user. search_exclude, vector names flowsheet items known relevant. list names removed prior searching data search patterns search_pattern. helps avoid alerting user numerous flowsheet items known irrelevant. Excluding rows. Rows containing NA value column may always irrelevant, may helpful remove setting silently_exclude_na_when TRUE. Alternatively, expression describes row excluded can provided using silently_exclude_when. example, setting (value_original == \"(Comment)\") exclude rows value \"(Comment)\". numerical flowsheet items,range_discard_below range_discard_above can specified values outside range excluded (see details). Converting values numbers/characters/logicals. Raw flowsheet data complex mix numerical data (sometimes containing censoring, non-numerical data), categorical data (coded characters) logical data (usually coded characters). Standardising raw data data single type makes downstream analysis easier, several aspects definition specify done: type: one numeric, character logical. used set sensible defaults aspects specification, added column output, downstream handling data can use column determine handling data (e.g. default plots might barplot character items lineplot numeric items) value_as_number_fn, value_as_character_fn value_as_logical_fn enable functions handle conversion raw data. TODO add details unit_rescale_fn unit_relabel_fn enable functions standardise units provided coalesce_fn enables function combines together data provided. instance, can used specify simultaneous data combined: e.g. two blood pressure records exact time handled? function can describe combine information e.g. taking mean max, arbitrarily choosing one records. Validating data conform expectations. Two parameters enable checking data comply known restrictions. example, may know finite range exists flowsheet item, want check data fall within range. Alternatively, may need map value raw data smaller range values, need sure function handles values present raw data (.e. new values added). Checks performed raw data supplied expect_before, whereas checks performed cleaned data supplied expect_after. Specification ranges. Two types ranges can specified: range_discard_below range_discard_above: intended describe hard limits: values outside range excluded. range_mainly_low range_mainly_high: intended describe range values typically expect data fall within, can useful setting default ranges e.g. default plots. Values outside range excluded.","code":""},{"path":"/reference/fsheet_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add and extract flowsheet items — fsheet_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/fsheet_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add and extract flowsheet items — fsheet_add","text":"","code":"# A definition for the NEWS2 score: # - Includes the value of the flowsheet called \"NEWS 2 score\" # - Excludes all NA values, and also \" \" and \"E\". # - The value_as_number_fn will convert \"3mm\" to 3, since this is probably #   a typo # - Checks that all output values are in integers between 0 and 17. fsheet_def <- list() %>%   fsheet_add(     symbol = \"news2\",     title = \"NEWS2\",     names = c(\"NEWS2 score\"),     search_pattern = c(\"news2\", \"news\"),     search_exclude = c(),     silently_exclude_na_when = TRUE,     silently_exclude_when =       (value_original == \" \" |          value_original == \"E\" # some kind of typo       ),     value_as_number_fn =       case_when(value_original == \"3mm\" ~ 3,                 TRUE ~ value_as_number),     expect_after =       (value_as_number %in% 0:17))  # Note that person_id == \"BB\" has a NEWS2 with value=\"3mm\", and that # person_id == \"CC\" has a NEWS2 with NA value fsheet_raw_example %>% print(n = Inf) #> # A tibble: 31 × 10 #>    person_id  data_id line_id measurement_id measurement_datetime name               value comment template  form        #>    <chr>        <int>   <int> <chr>          <dttm>               <chr>              <chr> <chr>   <chr>     <chr>       #>  1 AA               5      61 1234           2021-01-03 17:00:00  Weight             4125  NA      IP Vitals Vital signs #>  2 AA        10909029      60 10             2021-01-01 10:59:00  SpO2               96    NA      IP Vitals Vital signs #>  3 AA        10909029      60 10             2021-01-02 08:59:00  SpO2               90    NA      IP Vitals Vital signs #>  4 AA        10926333     239 1234           2021-01-01 09:30:00  NEWS2 score        3     NA      IP Vitals Vital signs #>  5 AA        10926333     239 1234           2021-01-01 12:30:00  NEWS2 score        4     NA      IP Vitals Vital signs #>  6 AA        10926333     239 1234           2021-01-01 09:00:00  NEWS2 score        3     NA      IP Vitals Vital signs #>  7 AA        10909029      60 10             2021-01-05 11:30:00  SpO2               96    NA      IP Vitals Vital signs #>  8 AA        10909029      60 10             2021-01-05 16:30:00  SpO2               90    NA      IP Vitals Vital signs #>  9 AA        10909029      60 10             2021-01-06 10:30:00  SpO2               92    NA      IP Vitals Vital signs #> 10 AA        10926333     239 1234           2021-01-05 11:30:00  NEWS2 score        3     NA      IP Vitals Vital signs #> 11 AA        10926333     239 1234           2021-01-05 16:30:00  NEWS2 score        6     NA      IP Vitals Vital signs #> 12 AA        10926333     239 1234           2021-01-06 10:30:00  NEWS2 score        3     NA      IP Vitals Vital signs #> 13 BB        10926333     239 1234           2021-01-19 08:59:00  Weight             4000  NA      IP Vitals Vital signs #> 14 BB               5      61 1234           2021-01-20 09:00:00  Weight             4035  NA      IP Vitals Vital signs #> 15 BB               5      61 1234           2021-01-20 08:59:00  Weight             4025  NA      IP Vitals Vital signs #> 16 BB               5      61 1234           2021-01-25 08:59:00  Weight             4000  NA      IP Vitals Vital signs #> 17 BB        10909029      60 10             2021-01-24 09:00:00  NEWS2/MEOWS: ACVPU A     NA      IP Vitals Vital signs #> 18 BB        10909029      60 10             2021-01-24 09:00:00  NEWS2/MEOWS: ACVPU P     NA      IP Vitals Vital signs #> 19 BB        10926333     239 1234           2021-01-21 09:30:00  NEWS2 score        3     NA      IP Vitals Vital signs #> 20 BB        10926333     239 1234           2021-01-22 12:30:00  NEWS2 score        4     NA      IP Vitals Vital signs #> 21 BB        10926333     239 1234           2021-01-23 09:00:00  NEWS2 score        3mm   NA      IP Vitals Vital signs #> 22 BB        10909029      60 10             2021-01-21 08:59:00  SpO2               93    NA      IP Vitals Vital signs #> 23 BB        10909029      60 10             2021-01-23 08:59:00  SpO2               85    NA      IP Vitals Vital signs #> 24 BB        10909029      60 10             2021-01-26 12:59:00  SpO2               80    NA      IP Vitals Vital signs #> 25 BB        10909029      60 10             2021-02-01 19:00:00  SpO2               30    NA      IP Vitals Vital signs #> 26 CC        10926333     239 1234           2021-01-01 08:59:00  NEWS2 score        5     NA      IP Vitals Vital signs #> 27 CC        10926333     239 1234           2021-01-03 17:00:00  NEWS2 score        7     NA      IP Vitals Vital signs #> 28 CC        10926333     239 1234           2021-01-04 09:00:00  NEWS2 score        6     NA      IP Vitals Vital signs #> 29 CC        10926333     239 1234           2021-01-02 08:59:00  NEWS2 score        NA    NA      IP Vitals Vital signs #> 30 CC        10909029      60 10             NA                   SpO2               93    NA      IP Vitals Vital signs #> 31 NA              NA      NA NA             NA                   NA                 NA    NA      NA        NA           # Note that the NA row is excluded, and that \"3mm\" is converted to 3 fsheet_extract(fsheet_raw_example, fsheet_def) #> ℹ Extracting NEWS2 (news2) #> ℹ 13 rows of raw data #> ℹ 1 row labelled since value was NA #> ℹ 12 rows extracted #> # A tibble: 12 × 33 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form   data_id line_id measurement_id title comment fsheet_id #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>    <int>   <int> <chr>          <chr> <chr>       <int> #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital…  1.09e7     239 1234           NEWS2 NA             NA #> # ℹ 15 more variables: satisfies_expect_before <lgl>, satisfies_all_numeric <lgl>, satisfies_expect_after <lgl>, exclude <lgl>, exclude_is_duplicate <lgl>, exclude_is_duplicate_of_row_number <int>, #> #   exclude_is_silently_exclude_na <lgl>, exclude_is_silently_exclude <lgl>, exclude_is_coalesced <lgl>, exclude_is_too_high <lgl>, exclude_is_too_low <lgl>, range_mainly_low <dbl>, #> #   range_mainly_high <dbl>, range_discard_below <dbl>, range_discard_above <dbl>"},{"path":"/reference/fsheet_infer_fio2.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer FiO2 — fsheet_infer_fio2","title":"Infer FiO2 — fsheet_infer_fio2","text":"Infer FiO2","code":""},{"path":"/reference/fsheet_infer_fio2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer FiO2 — fsheet_infer_fio2","text":"","code":"fsheet_infer_fio2(x)"},{"path":"/reference/fsheet_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert fsheet_def to data frame — fsheet_info","title":"Convert fsheet_def to data frame — fsheet_info","text":"Convert fsheet_def data frame","code":""},{"path":"/reference/fsheet_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert fsheet_def to data frame — fsheet_info","text":"","code":"fsheet_info(fsheet_def, exclude_lists = FALSE)"},{"path":"/reference/fsheet_io_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a flowsheet item — fsheet_io_add","title":"Add a new definition of a flowsheet item — fsheet_io_add","text":"Add new definition flowsheet item Extract fsheet_io data tidy format","code":""},{"path":"/reference/fsheet_io_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a flowsheet item — fsheet_io_add","text":"","code":"fsheet_io_add(   fsheet_io_def,   symbol,   title,   names = NA,   search_pattern,   search_exclude = NA,   type = \"numeric\",   silently_exclude_na_when = FALSE,   silently_exclude_when = FALSE,   censoring_fn = case_when(TRUE ~ NA_character_),   value_as_number_fn = if_else(type == \"numeric\", case_when(TRUE ~ value_as_number),     case_when(TRUE ~ NA_real_)),   value_as_character_fn = if_else(type == \"character\", case_when(TRUE ~     value_as_character), case_when(TRUE ~ NA_character_)),   value_as_logical_fn = if_else(type == \"logical\", case_when(TRUE ~ value_as_logical),     case_when(TRUE ~ as.logical(NA))),   unit_rescale_fn = case_when(TRUE ~ value_as_number),   unit_relabel_fn = case_when(TRUE ~ NA_character_),   coalesce_fn = identity,   expect_before = TRUE,   expect_after = TRUE,   range_mainly_low = NA,   range_mainly_high = NA,   range_discard_below = NA,   range_discard_above = NA )  fsheet_io_extract(x, fsheet_io_def, errors = stop)"},{"path":"/reference/fsheet_io_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a flowsheet item — fsheet_io_add","text":"fsheet_io_def fsheet_io definition symbol short name flowsheet item. character vector suitable use R object name title full name flowsheet item, suitable using figure titles etc names display names (disp_name raw format) flowsheet items include search_pattern charater vector potential synonymns flowsheet item, case new names (disp_name raw format) item added future. search_exclude character vector flowsheet item names (disp_name raw format)  known relevant flowsheet item. type Whether flowsheet item number string. Either \"numeric\" \"character\" silently_exclude_na_when expression returns logical value, specifying circumstances NA values automatically excluded. silently_exclude_when expression returns logical value, specifying circumstances values automatically excluded censoring_fn function specifying value censoring column value_as_number_fn function specifying generate value_as_number column value_as_character_fn function specifying generate value_as_character column value_as_logical_fn function specifying generate value_as_logical column unit_rescale_fn function specifying rescale flowsheet values. default, rescale unit_relabel_fn function specifying relabel units flowsheet values. default, rescale coalesce_fn function specifying combine measurements exactly time expect_before expression returns logical value, specifying condition TRUE raw data expect_after expression returns logical value, specifying condition TRUE processed (output) data range_mainly_low, range_mainly_high indicative lower upper range values. Values outside range excluded: purely setting default scales plots etc range_discard_below, range_discard_above pair set lower upper range flowsheet item. Values outside range EXCLUDED. x Flowsheet data renamed format (applying fsheet_io_rename) errors function indicating error found","code":""},{"path":"/reference/fsheet_io_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a flowsheet item — fsheet_io_add","text":"data frame following columns: person_id, symbol, value_as_character, value_as_number, value_as_logical, censoring, comment, measurement_datetime, name, title, data_id, measurement_id, line_id, template, form, type, unit","code":""},{"path":"/reference/fsheet_io_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a flowsheet item — fsheet_io_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/fsheet_label_timepoints_before_timepoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Label timepoints before timepoint — fsheet_label_timepoints_before_timepoint","title":"Label timepoints before timepoint — fsheet_label_timepoints_before_timepoint","text":"Label timepoints timepoint","code":""},{"path":"/reference/fsheet_label_timepoints_before_timepoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label timepoints before timepoint — fsheet_label_timepoints_before_timepoint","text":"","code":"fsheet_label_timepoints_before_timepoint(timepoints, before_timepoints)"},{"path":"/reference/fsheet_pivot_longer.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot fsheet data longer — fsheet_pivot_longer","title":"Pivot fsheet data longer — fsheet_pivot_longer","text":"Pivot fsheet data longer","code":""},{"path":"/reference/fsheet_pivot_longer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot fsheet data longer — fsheet_pivot_longer","text":"","code":"fsheet_pivot_longer(x)"},{"path":"/reference/fsheet_pivot_wider_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","title":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","text":"Pivot symbol columns, row unique measurement time","code":""},{"path":"/reference/fsheet_pivot_wider_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","text":"","code":"fsheet_pivot_wider_datetime(   x,   id_cols = c(\"person_id\", \"measurement_datetime\"),   ... )"},{"path":"/reference/fsheet_pivot_wider_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","text":"x data frame id_cols set columns uniquely identifies observation. ... Passed pivot_value_wider","code":""},{"path":"/reference/fsheet_pivot_wider_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","text":"data frame","code":""},{"path":"/reference/fsheet_pivot_wider_datetime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pivot data wider, with multiple value type — fsheet_pivot_wider_datetime","text":"R.J.B. Goudie","code":""},{"path":"/reference/fsheet_sf_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SpO2/FiO2 ratio — fsheet_sf_ratio","title":"Calculate SpO2/FiO2 ratio — fsheet_sf_ratio","text":"Calculate SpO2/FiO2 ratio","code":""},{"path":"/reference/fsheet_sf_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SpO2/FiO2 ratio — fsheet_sf_ratio","text":"","code":"fsheet_sf_ratio(x, shape = \"long\")"},{"path":"/reference/fsheet_spo2_on_room_air.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract peripheral oxygen saturations (SpO2) on room air — fsheet_spo2_on_room_air","title":"Extract peripheral oxygen saturations (SpO2) on room air — fsheet_spo2_on_room_air","text":"Excludes SpO2 measurements time room air","code":""},{"path":"/reference/fsheet_spo2_on_room_air.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract peripheral oxygen saturations (SpO2) on room air — fsheet_spo2_on_room_air","text":"","code":"fsheet_spo2_on_room_air(x, shape = \"long\")"},{"path":"/reference/fsheet_spo2_on_room_air.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract peripheral oxygen saturations (SpO2) on room air — fsheet_spo2_on_room_air","text":"x fsheet_raw dataframe shape Either \"long\" \"wide\" format dataframe output","code":""},{"path":"/reference/fsheet_timepoints_within_timeranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Timepoints within timeranges — fsheet_timepoints_within_timeranges","title":"Timepoints within timeranges — fsheet_timepoints_within_timeranges","text":"Timepoints within timeranges","code":""},{"path":"/reference/fsheet_timepoints_within_timeranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timepoints within timeranges — fsheet_timepoints_within_timeranges","text":"","code":"fsheet_timepoints_within_timeranges(timepoints, timeranges)"},{"path":"/reference/geom_numeric_point_lines_logical_point.html","id":null,"dir":"Reference","previous_headings":"","what":"geom_numeric_point_lines_logical_point — geom_numeric_point_lines_logical_point","title":"geom_numeric_point_lines_logical_point — geom_numeric_point_lines_logical_point","text":"geom_numeric_point_lines_logical_point","code":""},{"path":"/reference/geom_numeric_point_lines_logical_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geom_numeric_point_lines_logical_point — geom_numeric_point_lines_logical_point","text":"","code":"geom_numeric_point_lines_logical_point()"},{"path":"/reference/geom_numeric_point_logical_point.html","id":null,"dir":"Reference","previous_headings":"","what":"geom_numeric_point_logical_point — geom_numeric_point_logical_point","title":"geom_numeric_point_logical_point — geom_numeric_point_logical_point","text":"geom_numeric_point_logical_point","code":""},{"path":"/reference/geom_numeric_point_logical_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geom_numeric_point_logical_point — geom_numeric_point_logical_point","text":"","code":"geom_numeric_point_logical_point()"},{"path":"/reference/geom_numeric_point_logical_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"geom_numeric_point_logical_tile — geom_numeric_point_logical_tile","title":"geom_numeric_point_logical_tile — geom_numeric_point_logical_tile","text":"geom_numeric_point_logical_tile","code":""},{"path":"/reference/geom_numeric_point_logical_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geom_numeric_point_logical_tile — geom_numeric_point_logical_tile","text":"","code":"geom_numeric_point_logical_tile()"},{"path":"/reference/infusion_dose_per.html","id":null,"dir":"Reference","previous_headings":"","what":"Infusion dosing per time unit — infusion_dose_per","title":"Infusion dosing per time unit — infusion_dose_per","text":"\"visit_id\", \"imv_index\"","code":""},{"path":"/reference/infusion_dose_per.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infusion dosing per time unit — infusion_dose_per","text":"","code":"infusion_dose_per(infusion_df, time_unit = \"day\", by)"},{"path":"/reference/infusion_fn_by_visit.html","id":null,"dir":"Reference","previous_headings":"","what":"Infusion function calculation — infusion_fn_by_visit","title":"Infusion function calculation — infusion_fn_by_visit","text":"note uses rate!","code":""},{"path":"/reference/infusion_fn_by_visit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infusion function calculation — infusion_fn_by_visit","text":"","code":"infusion_fn_by_visit(x)"},{"path":"/reference/infusion_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Form grid for infusions — infusion_grid","title":"Form grid for infusions — infusion_grid","text":"Form grid infusions","code":""},{"path":"/reference/infusion_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Form grid for infusions — infusion_grid","text":"","code":"infusion_grid(.x, seq_unit, time_unit, .progress = NULL)"},{"path":"/reference/integrate_by_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate function by minute — integrate_by_min","title":"Integrate function by minute — integrate_by_min","text":"Integrate function minute","code":""},{"path":"/reference/integrate_by_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate function by minute — integrate_by_min","text":"","code":"integrate_by_min(f, lower, upper)"},{"path":"/reference/intersect_timeranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect two timeranges — intersect_timeranges","title":"Intersect two timeranges — intersect_timeranges","text":"Intersect two timeranges","code":""},{"path":"/reference/intersect_timeranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect two timeranges — intersect_timeranges","text":"","code":"intersect_timeranges(timerange1, timerange2)"},{"path":"/reference/med_admin_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a medication administration drug — med_admin_add","title":"Add a new definition of a medication administration drug — med_admin_add","text":"Add new definition medication administration drug Extract med_admin data tidy format","code":""},{"path":"/reference/med_admin_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a medication administration drug — med_admin_add","text":"","code":"med_admin_add(   med_admin_def,   note,   symbol,   title,   names = NA,   search_pattern,   search_exclude = NA,   silently_exclude_na_routes = FALSE,   route_class = \"intravenous\",   route_include = default_route_include(route_class),   route_exclude = default_route_exclude(route_class),   action_class = c(\"bolus\", \"infusion\", \"pca\"),   action_include = default_action_include(action_class),   action_exclude = default_action_exclude(action_class),   concentration_fn = case_when(TRUE ~ NA_real_),   dose_range_discard_above_fn = case_when(TRUE ~ Inf),   dose_range_mainly_below_fn = NA,   expect_after = TRUE )  med_admin_extract(   x,   med_admin_def,   med_admin_units,   errors = stop,   rds_only = FALSE,   rds_filepath_fn = NULL )"},{"path":"/reference/med_admin_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a medication administration drug — med_admin_add","text":"med_admin_def med_admin definition note character vector notes printed symbol short name flowsheet item. character vector suitable use R object name title full name test item, suitable using figure titles etc names names Medications (DrugName raw format) search_pattern charater vector potential synonymns drug, case new names (DrugName raw format) drug added future. search_exclude character vector drug names (DrugName raw format) known relevant drug silently_exclude_na_routes logical specifying whether medication administration records NA routes automatically excluded. route_class One enteral, intravenous, other_systemic, respiratory topical. classes use classification med_admin_routes.csv specify list routes include route_include vector route names (RouteOfMedicationAbbreviated raw format) include route_exclude vector route names (RouteOfMedicationAbbreviated raw format) exclude action_class One infusion, bolus, pca, feed. classes use classification med_admin_action.csv specify list actions include action_include vector action names (MARAction raw format) include action_exclude vector action names (MARAction raw format) exclude concentration_fn function codes concentration row medication administration records (drug). return real. typically done basis name, info_concentration, info_conversion info_rate, can use variables dataframe. dose_range_mainly_below_fn CURRRENTLY IMPLEMENTED. indicative lower upper range values. Values outside range excluded: purely setting default scales plots etc expect_after expression returns logical value, specifying condition TRUE processed (output) data x Medication administration data tidy-column-name format (applying med_admin_rename) errors function indicating error found dose_range_discard_above_fne CURRRENTLY IMPLEMENTED. seta upper range dose item. Values outside range EXCLUDED.","code":""},{"path":"/reference/med_admin_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a medication administration drug — med_admin_add","text":"data frame following columns: person_id, symbol, value_as_number, value_as_character, censoring, administered_datetime, unit, name, title, method, group, type result sorted administered_datetime","code":""},{"path":"/reference/med_admin_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a medication administration drug — med_admin_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/med_admin_map_units_to_canonical.html","id":null,"dir":"Reference","previous_headings":"","what":"Map units to canonical units — med_admin_map_units_to_canonical","title":"Map units to canonical units — med_admin_map_units_to_canonical","text":"Map units canonical units","code":""},{"path":"/reference/med_admin_map_units_to_canonical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map units to canonical units — med_admin_map_units_to_canonical","text":"","code":"med_admin_map_units_to_canonical(x)"},{"path":"/reference/med_admin_rate_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rate rescaling — med_admin_rate_rescale","title":"Rate rescaling — med_admin_rate_rescale","text":"Rate rescaling","code":""},{"path":"/reference/med_admin_rate_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rate rescaling — med_admin_rate_rescale","text":"","code":"med_admin_rate_rescale(x, fsheet_weight)"},{"path":"/reference/med_admin_route_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Route and actions defaults — default_route_include","title":"Route and actions defaults — default_route_include","text":"Route actions defaults","code":""},{"path":"/reference/med_admin_route_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Route and actions defaults — default_route_include","text":"","code":"default_route_include(route_class)  default_route_exclude(route_class)  default_action_include(action_class)  default_action_exclude(action_class)"},{"path":"/reference/med_admin_simultaneous_administration.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve simultaneous administration — resolve_simultaneous_administration_datetime","title":"Resolve simultaneous administration — resolve_simultaneous_administration_datetime","text":"Resolve simultaneous administration","code":""},{"path":"/reference/med_admin_simultaneous_administration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve simultaneous administration — resolve_simultaneous_administration_datetime","text":"","code":"resolve_simultaneous_administration_datetime(x)  coalesce_simultaneous_administration_datetime(x)"},{"path":"/reference/med_admin_stub_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a stub definition of medication administration — med_admin_stub_def","title":"Generate a stub definition of medication administration — med_admin_stub_def","text":"Returns code needed define med_admin_def object.","code":""},{"path":"/reference/med_admin_stub_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a stub definition of medication administration — med_admin_stub_def","text":"","code":"med_admin_stub_def(   x,   symbol,   title,   search = NULL,   names = NULL,   route_class = NULL,   action_class = NULL )"},{"path":"/reference/med_admin_stub_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a stub definition of medication administration — med_admin_stub_def","text":"x Medication data tidy-column-name format (applying med_admin_rename) symbol short name medication administration item. character vector suitable use R object name title full name medication administration item, suitable using figure titles etc search charater vector potential synonymns test, case new names/variants medication added future. NULL, names used define specific list medication names include. names names Medications (DrugName raw format). used search = NULL.","code":""},{"path":"/reference/med_admin_stub_def.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a stub definition of medication administration — med_admin_stub_def","text":"Typically, may wish run search set drug name, rerun filtered list medications . ensures route action listed includes found data medications interest.","code":""},{"path":"/reference/med_prescr_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a test item — med_prescr_add","title":"Add a new definition of a test item — med_prescr_add","text":"Add new definition test item Extract med_prescr data tidy format","code":""},{"path":"/reference/med_prescr_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a test item — med_prescr_add","text":"","code":"med_prescr_add(   med_prescr_def,   symbol,   title,   names = NA,   search_pattern,   search_exclude = NA,   silently_exclude_na_routes = FALSE,   route,   route_exclude = NA,   dose_as_number_fn = case_when(TRUE ~ dose_as_number),   dose_rescale_fn = case_when(TRUE ~ as.numeric(dose_as_number)),   unit_relabel_fn = case_when(TRUE ~ unit),   expect_after = TRUE )  med_prescr_extract(x, med_prescr_def, errors = stop)"},{"path":"/reference/med_prescr_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a test item — med_prescr_add","text":"med_prescr_def med_prescr definition symbol short name flowsheet item. character vector suitable use R object name title full name test item, suitable using figure titles etc names names Medications (DrugName raw format) search_pattern charater vector potential synonymns test, case new names (TestName raw format) test added future. search_exclude character vector test names (TestName raw format) known relevant test. unit_relabel_fn function specifying relabel units result values. default, rescale. expect_after expression returns logical value, specifying condition TRUE processed (output) data x Medication administration data tidy-column-name format (applying med_prescr_rename) errors function indicating error found search_exclude_group character vector test group names (TestGroupName raw format) known relevant test. type Whether flowsheet item number string. Either \"numeric\" \"character\" silently_exclude_na_when expression returns logical value, specifying circumstances NA values automatically excluded. silently_exclude_when expression returns logical value, specifying circumstances values automatically excluded censoring_fn function specifying value censoring column value_as_number_fn function specifying generate value_as_number column value_as_character_fn function specifying generate value_as_character column unit_rescale_fn function specifying rescale result values. default, rescale. expect_before expression returns logical value, specifying condition TRUE raw data range_mainly_low, range_mainly_high indicative lower upper range values. Values outside range excluded: purely setting default scales plots etc range_discard_below, range_discard_above pair set lower upper range flowsheet item. Values outside range EXCLUDED.","code":""},{"path":"/reference/med_prescr_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a test item — med_prescr_add","text":"data frame following columns: person_id, symbol, value_as_number, value_as_character, censoring, administered_datetime, unit, name, title, method, group, type result sorted administered_datetime","code":""},{"path":"/reference/med_prescr_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a test item — med_prescr_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/med_prescr_stub_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a stub definition of medication administration — med_prescr_stub_def","title":"Generate a stub definition of medication administration — med_prescr_stub_def","text":"Returns code needed define med_prescr_def object.","code":""},{"path":"/reference/med_prescr_stub_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a stub definition of medication administration — med_prescr_stub_def","text":"","code":"med_prescr_stub_def(x, symbol, title, search = NULL, names = NULL)"},{"path":"/reference/med_prescr_stub_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a stub definition of medication administration — med_prescr_stub_def","text":"x Medication data tidy-column-name format (applying med_prescr_rename) symbol short name medication administration item. character vector suitable use R object name title full name medication administration item, suitable using figure titles etc search charater vector potential synonymns test, case new names/variants medication added future. NULL, names used define specific list medication names include. names names Medications (DrugName raw format). used search = NULL.","code":""},{"path":"/reference/med_prescr_stub_def.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a stub definition of medication administration — med_prescr_stub_def","text":"Typically, may wish run search set drug name, rerun filtered list medications . ensures route action listed includes found data medications interest.","code":""},{"path":"/reference/nearest_to_event_during.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract measurements during a timeperiod nearest to a specific event — nearest_to_event_during","title":"Extract measurements during a timeperiod nearest to a specific event — nearest_to_event_during","text":"Extract nearest measurement specific event.","code":""},{"path":"/reference/nearest_to_event_during.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract measurements during a timeperiod nearest to a specific event — nearest_to_event_during","text":"","code":"nearest_to_event_during(..., event_datetime, names_suffix = \"\")  nearest_visit_start_during(...)"},{"path":"/reference/nearest_to_event_during.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract measurements during a timeperiod nearest to a specific event — nearest_to_event_during","text":"... Arguments passed summarise_during x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\" event_datetime datetime extraction relative . names_suffix text label use end column name created.","code":""},{"path":"/reference/nearest_to_event_during.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract measurements during a timeperiod nearest to a specific event — nearest_to_event_during","text":"","code":"#' # raw data that we will combine #' # raw data that we will combine adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       # extract the first NEWS2 record during each hospital visit first_news2 <- adm_data_example %>%   first_during(fsheet_news2_example,              datetime = measurement_datetime,              during = \"during_visit\") %>%   select(person_id,          visit_id,          visit_start_datetime,          visit_end_datetime,          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [20ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [43ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [18ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [18ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> ✔ Pivoting wider [33ms] #>  #> ℹ Pivoting wider #> ℹ Relocating columns #> ✔ Relocating columns [18ms] #>  #> ℹ Pivoting wider #> ✔ Pivoting wider [90ms] #>   # extract the NEAREST (either before or after) SpO2 measurement that to # the first NEWS2 record during each hospital visit first_news2 %>%  nearest_to_event_during(fsheet_spo2_example,                          datetime = measurement_datetime,                          during = \"during_visit\",                          event_datetime = news2_first_during_visit_datetime,                          names_suffix = \"first_news2\") %>%   select(person_id,          visit_id,          contains(\"spo2\"),          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> Error in if (head10_all_midnight) {    head1000_all_midnight <- is_all_midnight(head(x, n = 1000),         {            {                datetime            }        })    if (head1000_all_midnight) {        all_midnight <- is_all_midnight(x, {            {                datetime            }        })        if (all_midnight) {            cli::cli_alert_danger(c(\"Supplied datetime column is all midnight - \",                 \"did you mean to use _date?\"))        }    }}: the condition has length > 1 #> ✖ Checking datetime is not all midnight [9ms] #>  #> ℹ Extracting all during #> ✖ Extracting all during [22ms] #>   # extract the NEAREST (either before or after) SpO2 measurement that to # the first NEWS2 record during each hospital visit first_news2 %>%  nearest_visit_start_during(    fsheet_spo2_example,    datetime = measurement_datetime,    during = \"14_days_before_visit_until_visit_end\") %>%   select(person_id,          visit_id,          contains(\"spo2\"),          contains(\"news2\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> Error in if (head10_all_midnight) {    head1000_all_midnight <- is_all_midnight(head(x, n = 1000),         {            {                datetime            }        })    if (head1000_all_midnight) {        all_midnight <- is_all_midnight(x, {            {                datetime            }        })        if (all_midnight) {            cli::cli_alert_danger(c(\"Supplied datetime column is all midnight - \",                 \"did you mean to use _date?\"))        }    }}: the condition has length > 1 #> ✖ Checking datetime is not all midnight [10ms] #>  #> ℹ Extracting all during #> ✖ Extracting all during [23ms] #>"},{"path":"/reference/person_id_shorten.html","id":null,"dir":"Reference","previous_headings":"","what":"Find shortest possible unique person_id — person_id_shorten","title":"Find shortest possible unique person_id — person_id_shorten","text":"Finds shortest substring person_id retains uniqueness. substrings first characters person_ids.","code":""},{"path":"/reference/person_id_shorten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find shortest possible unique person_id — person_id_shorten","text":"","code":"person_id_shorten(person_id)"},{"path":"/reference/person_id_shorten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find shortest possible unique person_id — person_id_shorten","text":"person_id character vector person IDs shorten","code":""},{"path":"/reference/person_id_shorten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find shortest possible unique person_id — person_id_shorten","text":"character vector shortened person IDs","code":""},{"path":"/reference/person_id_shorten.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find shortest possible unique person_id — person_id_shorten","text":"Shortened person_ids added adm_annotate() using function.","code":""},{"path":[]},{"path":"/reference/person_id_shorten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find shortest possible unique person_id — person_id_shorten","text":"","code":"person_id_shorten(c(\"AAA\", \"ABC\", \"ACD\", \"ADE\")) #> [1] \"AA\" \"AB\" \"AC\" \"AD\"  person_id_shorten(c(\"XAAA\", \"XABC\", \"XACD\", \"XADE\")) #> [1] \"XAA\" \"XAB\" \"XAC\" \"XAD\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plots_adt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot departments (wards) visited by patients — plot_adt_department_col","title":"Plot departments (wards) visited by patients — plot_adt_department_col","text":"Simple plots showing history departments patient visits using data ADT.","code":""},{"path":"/reference/plots_adt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot departments (wards) visited by patients — plot_adt_department_col","text":"","code":"plot_adt_department_col(x, facet = TRUE, ...)  plot_adt_department_timeline(x, ...)"},{"path":"/reference/plots_adt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot departments (wards) visited by patients — plot_adt_department_col","text":"x ADT data frame joined annotated ADM data. facet Whether facet person_id_short . sensible plot one patient's data provided data frame ... Passed aes(), enabling e.g. colouring according user-specified colour x","code":""},{"path":"/reference/plots_adt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot departments (wards) visited by patients — plot_adt_department_col","text":"","code":"adm_annotated <- adm_annotate(adm_data_example) adt_adm_joined <- adt_data_example %>%   dplyr::left_join(adm_annotated) #> Joining with `by = join_by(person_id, visit_id)`  if (require(\"ggplot2\")){  plot_adt_department_col(adt_adm_joined,                          colour = is_ed) } #> Loading required package: ggplot2 #> Error in geom_segment(alpha = 0.5, size = 10): Problem while computing aesthetics. #> ℹ Error occurred in the 1st layer. #> Caused by error in `loadNamespace()`: #> ! there is no package called ‘forcats’  if (require(\"ggplot2\")){  plot_adt_department_col(filter(adt_adm_joined, person_id == \"AA\"),                          facet = FALSE) } #> Error in geom_segment(alpha = 0.5, size = 10): Problem while computing aesthetics. #> ℹ Error occurred in the 1st layer. #> Caused by error in `loadNamespace()`: #> ! there is no package called ‘forcats’   adm_annotated <- adm_annotate(adm_data_example)  adt_adm_joined <- adt_data_example %>%    dplyr::left_join(adm_annotated) #> Joining with `by = join_by(person_id, visit_id)`  if (require(\"ggplot2\")){  plot_adt_department_timeline(adt_adm_joined) } #> Warning: Removed 2 rows containing missing values or values outside the scale range (`geom_segment()`). #> Warning: Removed 1 row containing missing values or values outside the scale range (`geom_segment()`). #> Warning: Removed 2 rows containing missing values or values outside the scale range (`geom_segment()`). #> Warning: Removed 5 rows containing missing values or values outside the scale range (`geom_text()`)."},{"path":"/reference/plots_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests plots — tests_plot_numeric","title":"Tests plots — tests_plot_numeric","text":"Tests plots","code":""},{"path":"/reference/plots_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests plots — tests_plot_numeric","text":"","code":"tests_plot_numeric(   x,   range_mainly_low,   range_mainly_high,   range_discard_below,   range_discard_above )  tests_histogram_time_of_day(x, datetime = collected_datetime)  tests_histogram_by_date(x, datetime = collected_datetime)  tests_histogram_by_weekday(x, datetime = collected_datetime)  tests_plot_point(x)  tests_plot_tile(x)"},{"path":"/reference/plots_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tests plots — tests_plot_numeric","text":"","code":"tests <- dplyr::left_join(   tests_magnesium_example,   tests_info(tests_def_example)) #> Joining with `by = join_by(symbol, title, type)`  tests_plot_numeric(tests,                    tests$range_mainly_low,                    tests$range_mainly_high,                    tests$range_discard_below,                    tests$range_discard_above)   tests_histogram_time_of_day(tests)  tests_histogram_by_date(tests) #> Warning: Computation failed in `stat_bin()`. #> Caused by error in `bin_breaks_bins()`: #> ! `bins` must be a whole number, not the number 30.25.  tests_histogram_by_weekday(tests) #> Error in geom_bar(): Problem while computing aesthetics. #> ℹ Error occurred in the 1st layer. #> Caused by error in `as.POSIXlt.default()`: #> ! do not know how to convert 'x' to class “POSIXlt”"},{"path":"/reference/qc_report.html","id":null,"dir":"Reference","previous_headings":"","what":"QC report — qc_report","title":"QC report — qc_report","text":"QC report","code":""},{"path":"/reference/qc_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QC report — qc_report","text":"","code":"qc_report(   adm_data,   adt_data,   tests_data,   tests_def,   fsheet_data,   fsheet_def,   output_dir = getwd(),   ... )"},{"path":"/reference/qc_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QC report — qc_report","text":"","code":"adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days  # fsheet data fsheet_def <- list() %>%   fsheet_add(     symbol = \"news2\",     title = \"NEWS2\",     names = c(\"NEWS2 score\"),     search_pattern = c(\"news2\", \"news\"),     search_exclude = c(),     silently_exclude_na_when = TRUE,     silently_exclude_when =       (value_original == \" \" |          value_original == \"E\" # some kind of typo       ),     value_as_number_fn =       case_when(value_original == \"3mm\" ~ 3,                 TRUE ~ value_as_number),     expect_after =       (value_as_number %in% 0:17)) fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       tests_def <- list() %>%   tests_add(     symbol = \"magnesium\",     title = \"Magnesium\",     names_cuh = c(\"MAGNESIUM\"),     names_external = \"EXT MAGNESIUM\",     search_pattern = c(\"magnesium\", \"mg\"),     search_exclude = c(\"ETOH MG/100ML\",                        \"RETIRED-ETOH MG/100ML\",                        \"RIST 0.2MG/ML\",                        \"RIST 0.77MG/ML\",                        \"RISTOCETIN 0.5MG/ML\",                        \"RISTOCETIN 1.5MG/ML\"),     silently_exclude_na_when = FALSE,     censoring_fn = case_when(value_original == \"<0.29\" ~ \"left\", # very low                              TRUE ~ NA_character_),     value_as_number_fn = case_when(value_original == \"<0.29\" ~ 0.29,                                    TRUE ~ value_as_number),     expect_before = (unit == \"mmol/L\"),     range_mainly_low = 0.4,     range_mainly_high = 1.2,     range_discard_below = 0.32,     range_discard_above = 1.8) tests_magnesium_example #> # A tibble: 7 × 20 #>   person_id symbol    value_as_character value_as_number censoring value_as_logical ordered_datetime    collected_datetime  received_datetime   result_datetime     ordering_department  range_low #>   <chr>     <chr>     <chr>                        <dbl> <chr>     <lgl>            <dttm>              <dttm>              <dttm>              <dttm>              <chr>                <chr>     #> 1 AA        magnesium NA                            0.9  NA        NA               2021-01-02 09:00:00 2021-01-02 09:40:00 2021-01-02 09:50:00 2021-01-02 18:00:00 EMERGENCY DEPARTMENT 0.6       #> 2 BB        magnesium NA                            0.8  NA        NA               2021-01-19 09:00:00 2021-01-19 08:40:00 2021-01-19 09:40:00 2021-01-19 12:00:00 EMERGENCY DEPARTMENT 0.6       #> 3 BB        magnesium NA                            0.9  NA        NA               2021-01-20 09:00:00 2021-01-20 08:40:00 2021-01-20 09:40:00 2021-01-20 12:00:00 EMERGENCY DEPARTMENT 0.6       #> 4 BB        magnesium NA                            1    NA        NA               2021-01-21 09:00:00 2021-01-21 08:40:00 2021-01-21 09:40:00 2021-01-21 12:00:00 EMERGENCY DEPARTMENT 0.6       #> 5 BB        magnesium NA                            1.2  NA        NA               2021-01-22 09:00:00 2021-01-22 08:40:00 2021-01-22 09:40:00 2021-01-22 12:00:00 EMERGENCY DEPARTMENT 0.6       #> 6 BB        magnesium NA                            0.7  NA        NA               2021-01-23 09:00:00 2021-01-23 08:40:00 2021-01-23 09:40:00 2021-01-23 12:00:00 EMERGENCY DEPARTMENT 0.6       #> 7 CC        magnesium NA                            0.61 NA        NA               2021-02-01 14:00:00 2021-02-01 15:40:00 2021-02-01 16:50:00 2021-02-01 17:00:00 EMERGENCY DEPARTMENT 0.6       #> # ℹ 8 more variables: range_high <chr>, unit <chr>, name <chr>, title <chr>, method <chr>, group <chr>, order_id <chr>, type <chr>  if (FALSE) { # \\dontrun{ qc_report(adm_data = adm_data_example,           adt_data = adt_data_example,           tests_data = tests_magnesium_example,           tests_def = tests_def,           fsheet_data = fsheet_news2_example,           fsheet_def = fsheet_def) } # }"},{"path":"/reference/radiology_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a radiology item — radiology_add","title":"Add a new definition of a radiology item — radiology_add","text":"Add new definition radiology item Extract radiology data tidy format","code":""},{"path":"/reference/radiology_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a radiology item — radiology_add","text":"","code":"radiology_add(   radiology_def,   symbol,   title,   names = NA,   search_pattern,   search_exclude = NA,   value_as_character_fn = narrative )  radiology_extract(x, radiology_def, errors = stop)"},{"path":"/reference/radiology_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a radiology item — radiology_add","text":"radiology_def radiology definition symbol short name radiology item. character vector suitable use R object name title full name radiology item, suitable using figure titles etc names names procedure names (Proc_Name raw format) search_pattern charater vector potential synonymns radiology item, case new radiology names (Proc_Name raw format) radiology item added future. search_exclude character vector radiology names (Proc_Name raw format) known relevant. value_as_character_fn function specifying generate value_as_character column x Radiology data tidy-column-name format (applying radiology_rename) errors function indicating error found","code":""},{"path":"/reference/radiology_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a radiology item — radiology_add","text":"data frame following columns: person_id, symbol, value_as_number, value_as_character, censoring, administered_datetime, unit, name, title, method, group, type result sorted administered_datetime","code":""},{"path":"/reference/radiology_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a radiology item — radiology_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","title":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","text":"Convenience wrapper around readr::read_csv readr::read_csv makes easier set col_types standard data Epic. Also makes handling untimezoned data robust use functions clock::date_time_parse.","code":""},{"path":"/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","text":"","code":"read_tidybrookes_csv(   file,   col_types,   n_max = Inf,   trim_ws = FALSE,   na = c(\"\", \"NA\"),   quote = \"\\\"\",   tz = \"Europe/London\",   nonexistent = NULL,   ambiguous = NULL )  read_tidybrookes_delim(   file,   col_types,   delim = \"|\",   n_max = Inf,   trim_ws = FALSE,   na = c(\"\", \"NA\"),   quote = \"\\\"\" )"},{"path":"/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","text":"file Either path file, connection, literal data (either single string raw vector), per readr::read_delim() col_types Either string specifying name table data comes , standard format can used. Available values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology. translated column specification using default_col_types. readr::cols() format list column names types, can used nonstandard data format supplied. n_max Maximum number lines read. trim_ws leading trailing whitespace (ASCII spaces tabs) trimmed field parsing ? na Character vector strings interpret missing values. Set option character() indicate missing values. quote Single character used quote strings tz timezone name, \"Europe/London\" nonexistent One following nonexistent time resolution strategies, allowed either length 1, length input: \"roll-forward\": next valid instant time. \"roll-backward\": previous valid instant time. \"shift-forward\": Shift nonexistent time forward size daylight saving time gap. \"shift-backward: Shift nonexistent time backward size daylight saving time gap. \"NA\": Replace nonexistent times NA. \"error\": Error nonexistent times. Using either \"roll-forward\" \"roll-backward\" generally recommended shifting, two strategies maintain relative ordering elements input. NULL, defaults \"error\". ambiguous Passed clock::date-time-parse, usual values one following ambiguous time resolution strategies, allowed either length 1, length input: \"earliest\": two possible times, choose earliest one. \"latest\": two possible times, choose latest one. \"NA\": Replace ambiguous times NA. \"error\": Error ambiguous times. delim Single character used separate fields within record.","code":""},{"path":"/reference/read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","text":"Named col_types extracted using default_col_types(). transitions daylight savings times, nonexistent ambiguous times. Using parameters nonexistent ambiguous handling can made explicit consistent.","code":""},{"path":[]},{"path":"/reference/read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data from Epic in delimited (including CSV) format — read_tidybrookes_csv","text":"","code":"adm_file_path <- tidybrookes_example(\"adm.csv\")  # the format when col_types = \"adm\" default_col_types(\"adm\") #> Error in cols[[i]] <- switch(fname, col_skip = , col_guess = cols[[i]],     col_character = , col_factor = crayon::red(cols[[i]]), col_logical = crayon::yellow(cols[[i]]),     col_double = , col_integer = , col_number = crayon::green(cols[[i]]),     col_date = , col_datetime = , col_time = crayon::blue(cols[[i]])): replacement has length zero  read_tidybrookes_csv(   file = adm_file_path,   col_types = \"adm\" ) #> # A tibble: 5 × 13 #>   STUDY_SUBJECT_DIGEST PAT_ENC_CSN IN_DTTM             HOSP_DISCH_TIME     GENDER_DESC ETHNIC_GROUP_GROUPED DATE_OF_DEATH AGE_AT_ADM ADM_SERVICE        ADT_DEPARTMENT_NAME  DISCH_DEST DISCH_DECEASED #>   <chr>                    <int64> <dttm>              <dttm>              <chr>       <chr>                <dttm>             <int> <chr>              <chr>                <chr>      <chr>          #> 1 AA                             1 2021-01-01 09:00:00 2021-01-03 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> 2 AA                             2 2021-01-05 11:00:00 2021-01-07 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT 0          1              #> 3 BB                             3 2021-01-20 09:00:00 2021-02-01 18:00:00 Male        \"White\\n\"            NA                    12 Nephrology         DIALYSIS CENTRE      1          0              #> 4 CC                             4 2021-01-01 08:00:00 2021-02-01 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> 5 CC                             5 2021-02-02 08:00:00 2021-02-02 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> # ℹ 1 more variable: READMIT_WITHIN_30 <chr>  read_tidybrookes_csv(   file = adm_file_path,   col_types = \"adm\",   tz = \"Europe/London\",   nonexistent = \"roll-forward\",   ambiguous = \"latest\" ) #> # A tibble: 5 × 13 #>   STUDY_SUBJECT_DIGEST PAT_ENC_CSN IN_DTTM             HOSP_DISCH_TIME     GENDER_DESC ETHNIC_GROUP_GROUPED DATE_OF_DEATH AGE_AT_ADM ADM_SERVICE        ADT_DEPARTMENT_NAME  DISCH_DEST DISCH_DECEASED #>   <chr>                    <int64> <dttm>              <dttm>              <chr>       <chr>                <dttm>             <int> <chr>              <chr>                <chr>      <chr>          #> 1 AA                             1 2021-01-01 09:00:00 2021-01-03 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> 2 AA                             2 2021-01-05 11:00:00 2021-01-07 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT 0          1              #> 3 BB                             3 2021-01-20 09:00:00 2021-02-01 18:00:00 Male        \"White\\n\"            NA                    12 Nephrology         DIALYSIS CENTRE      1          0              #> 4 CC                             4 2021-01-01 08:00:00 2021-02-01 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> 5 CC                             5 2021-02-02 08:00:00 2021-02-02 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT 0          0              #> # ℹ 1 more variable: READMIT_WITHIN_30 <chr>  # view default cols() format - this is what will be used if a character # string name of a table is used, such as \"fsheet\" default_col_types(\"fsheet\") #> Error in cols[[i]] <- switch(fname, col_skip = , col_guess = cols[[i]],     col_character = , col_factor = crayon::red(cols[[i]]), col_logical = crayon::yellow(cols[[i]]),     col_double = , col_integer = , col_number = crayon::green(cols[[i]]),     col_date = , col_datetime = , col_time = crayon::blue(cols[[i]])): replacement has length zero  # custom col_types can be specified read_tidybrookes_csv(   file = adm_file_path,   col_types = cols(     STUDY_SUBJECT_DIGEST = col_character(),     fsd_id = col_character()) ) #> # A tibble: 5 × 13 #>   STUDY_SUBJECT_DIGEST PAT_ENC_CSN IN_DTTM             HOSP_DISCH_TIME     GENDER_DESC ETHNIC_GROUP_GROUPED DATE_OF_DEATH AGE_AT_ADM ADM_SERVICE        ADT_DEPARTMENT_NAME  DISCH_DEST DISCH_DECEASED #>   <chr>                      <dbl> <dttm>              <dttm>              <chr>       <chr>                <lgl>              <dbl> <chr>              <chr>                     <dbl>          <dbl> #> 1 AA                             1 2021-01-01 09:00:00 2021-01-03 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> 2 AA                             2 2021-01-05 11:00:00 2021-01-07 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT          0              1 #> 3 BB                             3 2021-01-20 09:00:00 2021-02-01 18:00:00 Male        \"White\\n\"            NA                    12 Nephrology         DIALYSIS CENTRE               1              0 #> 4 CC                             4 2021-01-01 08:00:00 2021-02-01 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> 5 CC                             5 2021-02-02 08:00:00 2021-02-02 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> # ℹ 1 more variable: READMIT_WITHIN_30 <dbl>  # Can use the clock package to determine handling of ambiguous and # nonexistent dates (due to transitions to and from daylight saving time) read_tidybrookes_csv(   file = adm_file_path,   col_types = cols(     STUDY_SUBJECT_DIGEST = col_character(),     fsd_id = col_character()),   tz = \"Europe/London\",   nonexistent = \"roll-forward\",   ambiguous = \"latest\" ) #> # A tibble: 5 × 13 #>   STUDY_SUBJECT_DIGEST PAT_ENC_CSN IN_DTTM             HOSP_DISCH_TIME     GENDER_DESC ETHNIC_GROUP_GROUPED DATE_OF_DEATH AGE_AT_ADM ADM_SERVICE        ADT_DEPARTMENT_NAME  DISCH_DEST DISCH_DECEASED #>   <chr>                      <dbl> <dttm>              <dttm>              <chr>       <chr>                <lgl>              <dbl> <chr>              <chr>                     <dbl>          <dbl> #> 1 AA                             1 2021-01-01 09:00:00 2021-01-03 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> 2 AA                             2 2021-01-05 11:00:00 2021-01-07 18:00:00 Female      \"White\\n\"            NA                    45 Emergency Medicine EMERGENCY DEPARTMENT          0              1 #> 3 BB                             3 2021-01-20 09:00:00 2021-02-01 18:00:00 Male        \"White\\n\"            NA                    12 Nephrology         DIALYSIS CENTRE               1              0 #> 4 CC                             4 2021-01-01 08:00:00 2021-02-01 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> 5 CC                             5 2021-02-02 08:00:00 2021-02-02 18:00:00 Female      \"White\\n\"            NA                    50 Emergency Medicine EMERGENCY DEPARTMENT          0              0 #> # ℹ 1 more variable: READMIT_WITHIN_30 <dbl>"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr case_when, filter, if_else, relocate, select readr col_character, col_datetime, cols tibble tibble","code":""},{"path":"/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename to tidy column names — rename","title":"Rename to tidy column names — rename","text":"Rename columns default names standard data format Clinical Informatics standardised, shorter names (e.g. lowercase, underscore-separated, _datetime suffix etc).","code":""},{"path":"/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename to tidy column names — rename","text":"","code":"default_rename(x)  adm_rename(x, names = default_rename(\"adm\"))  adt_rename(x, names = c())  demogs_rename(x, names = c())  diagnosis_pl_rename(x, names = c())  fsheet_io_rename(x, names = c())  fsheet_rename(x, names = c())  med_admin_rename(x, names = c())  med_hist_rename(x, names = c())  med_prescr_rename(x, names = c())  radiology_rename(x, names = c())  procedures_rename(x, names = c())  tests_rename(x, names = c())"},{"path":"/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename to tidy column names — rename","text":"x data frame raw adm data names vector new_name = old_name pairs override default renaming (default renaming merged names, names taking priority)","code":""},{"path":"/reference/rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename to tidy column names — rename","text":"supplied data frame, column names tidy-column-name format","code":""},{"path":"/reference/rename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename to tidy column names — rename","text":"default renaming map can viewed using default_rename(). variations format occur, custom renaming can performed using names argument.","code":""},{"path":[]},{"path":"/reference/rename.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename to tidy column names — rename","text":"R.J.B. Goudie","code":""},{"path":"/reference/rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename to tidy column names — rename","text":"","code":"# The raw columns names are messy: long names, mixed capitalisation, etc! fsheet_imported_example <-   read_tidybrookes_csv(     file = tidybrookes_example(\"fsheet.csv\"),     col_types = \"fsheet\"   ) colnames(fsheet_imported_example) #>  [1] \"STUDY_SUBJECT_DIGEST\" \"fsd_id\"               \"line\"                 \"flo-meas_id\"          \"MEASURE_TIME\"         \"disp_name\"            \"measured_value\"       \"meas_comment\"         #>  [9] \"template\"             \"form\"                  # Default renaming can be viewed with default_rename(\"fsheet\") #>              person_id                   name                   name                  value                  value                comment   measurement_datetime                data_id  #> \"STUDY_SUBJECT_DIGEST\"            \"disp_name\"            \"DISP_NAME\"       \"measured_value\"       \"MEASURED_VALUE\"         \"meas_comment\"         \"MEASURE_TIME\"               \"fsd_id\"  #>         measurement_id         measurement_id                line_id               template               template                   form                   form  #>          \"flo-meas_id\"          \"FLO_MEAS_ID\"                 \"line\"             \"template\"             \"TEMPLATE\"                 \"form\"                 \"FORM\"   colnames(fsheet_rename(fsheet_imported_example)) #>  [1] \"person_id\"            \"name\"                 \"value\"                \"comment\"              \"measurement_datetime\" \"data_id\"              \"measurement_id\"       \"line_id\"              #>  [9] \"template\"             \"form\"                  # Provided names override the defaults fsheet_imported_example %>%   fsheet_rename(names = c(custom_person_id = \"STUDY_SUBJECT_DIGEST\")) #> # A tibble: 32 × 10 #>    custom_person_id name        value comment measurement_datetime  data_id measurement_id line_id template  form        #>    <chr>            <chr>       <chr> <chr>   <dttm>                <int64>        <int64> <int64> <chr>     <chr>       #>  1 AA               Weight      4125  NA      2021-01-03 17:00:00         5           1234      61 IP Vitals Vital signs #>  2 AA               SpO2        96    NA      2021-01-01 10:59:00  10909029             10      60 IP Vitals Vital signs #>  3 AA               SpO2        90    NA      2021-01-02 08:59:00  10909029             10      60 IP Vitals Vital signs #>  4 AA               NEWS2 score 3     NA      2021-01-01 09:30:00  10926333           1234     239 IP Vitals Vital signs #>  5 AA               NEWS2 score 4     NA      2021-01-01 12:30:00  10926333           1234     239 IP Vitals Vital signs #>  6 AA               NEWS2 score 3     NA      2021-01-01 09:00:00  10926333           1234     239 IP Vitals Vital signs #>  7 AA               SpO2        96    NA      2021-01-05 11:30:00  10909029             10      60 IP Vitals Vital signs #>  8 AA               SpO2        90    NA      2021-01-05 16:30:00  10909029             10      60 IP Vitals Vital signs #>  9 AA               SpO2        92    NA      2021-01-06 10:30:00  10909029             10      60 IP Vitals Vital signs #> 10 AA               NEWS2 score 3     NA      2021-01-05 11:30:00  10926333           1234     239 IP Vitals Vital signs #> # ℹ 22 more rows"},{"path":"/reference/return_or_write_to_annotation_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Return of write to annotation database — return_or_write_to_annotation_db","title":"Return of write to annotation database — return_or_write_to_annotation_db","text":"Return write annotation database","code":""},{"path":"/reference/return_or_write_to_annotation_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return of write to annotation database — return_or_write_to_annotation_db","text":"","code":"return_or_write_to_annotation_db(x, x_annotated, annotation_db, id_cols)"},{"path":"/reference/return_or_write_to_annotation_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return of write to annotation database — return_or_write_to_annotation_db","text":"x input tbl _annotate function x_annotated _annotate function annotation_db tbl database source id_cols character vector columns retain annotations database (enable linking)","code":""},{"path":"/reference/summarise_during.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise (standardised) data during a time period — summarise_during","title":"Summarise (standardised) data during a time period — summarise_during","text":"Left joins adm data frame another data frame (person_id linking relevant datetime called datetime), filter rows y datetime within specified time period.","code":""},{"path":"/reference/summarise_during.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise (standardised) data during a time period — summarise_during","text":"","code":"summarise_during(   x,   y,   datetime,   during,   type = \"none\",   formula,   names_from = \"symbol\",   group_by = c(c(\"person_id\", \"visit_id\"), names_from),   values_from = c(\"value_as_number\", \"value_as_character\", \"value_as_logical\",     \"datetime\"),   names_suffix )"},{"path":"/reference/summarise_during.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise (standardised) data during a time period — summarise_during","text":"x adm data frame y (tidy) data frame, datetime column datetime column y use main datetime matching time period extract data , one : \"during_visit\" \"during_visit_initial_24h\" \"during_visit_initial_72h \"during_icu\" \"before_visit_initial_24h\" \"14_days_before_visit_until_visit_end\" \"year_before_visit_until_visit_end\" \"before_visit_end\" \"30_days_before_visit_start\" \"year_before_initial_24h\" \"during_value\" names_from, values_from pair arguments describing column (columns) get name output column (group_by), column (columns) get cell values (values_from). names_suffix character string naming summarised output","code":""},{"path":"/reference/summarise_during.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise (standardised) data during a time period — summarise_during","text":"data frame, row y measurement relevant time period patient. Note rows adm data repeated multiple times (one y measurement data point).","code":""},{"path":"/reference/summarise_during.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise (standardised) data during a time period — summarise_during","text":"R.J.B. Goudie","code":""},{"path":"/reference/summarise_during.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise (standardised) data during a time period — summarise_during","text":"","code":"adm_data_example #> # A tibble: 5 × 13 #>   person_id visit_id visit_start_datetime visit_end_datetime  gender ethnicity death_date age_at_visit_start adm_service        ward    discharge_destination discharged_deceased readmitted_within_30…¹ #>   <chr>        <int> <dttm>               <dttm>              <chr>  <chr>     <dttm>                  <int> <chr>              <chr>   <chr>                 <chr>               <chr>                  #> 1 AA               1 2021-01-01 09:00:00  2021-01-03 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     0                   1                      #> 2 AA               2 2021-01-05 11:00:00  2021-01-07 18:00:00 Female \"White\\r… NA                         45 Emergency Medicine EMERGE… 0                     1                   0                      #> 3 BB               3 2021-01-20 09:00:00  2021-02-01 18:00:00 Male   \"White\\r… NA                         12 Nephrology         DIALYS… 1                     0                   0                      #> 4 CC               4 2021-01-01 08:00:00  2021-02-01 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   1                      #> 5 CC               5 2021-02-02 08:00:00  2021-02-02 18:00:00 Female \"White\\r… NA                         50 Emergency Medicine EMERGE… 0                     0                   0                      #> # ℹ abbreviated name: ¹​readmitted_within_30_days fsheet_news2_example #> # A tibble: 12 × 17 #>    person_id symbol measurement_datetime value_as_number censoring value_as_logical value_as_character name        unit  type    template  form         data_id line_id measurement_id title comment #>    <chr>     <chr>  <dttm>                         <dbl> <chr>     <lgl>            <chr>              <chr>       <chr> <chr>   <chr>     <chr>          <int>   <int> <chr>          <chr> <chr>   #>  1 CC        news2  2021-01-01 08:59:00                5 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  2 AA        news2  2021-01-01 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  3 AA        news2  2021-01-01 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  4 AA        news2  2021-01-01 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  5 CC        news2  2021-01-03 17:00:00                7 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  6 CC        news2  2021-01-04 09:00:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  7 AA        news2  2021-01-05 11:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  8 AA        news2  2021-01-05 16:30:00                6 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #>  9 AA        news2  2021-01-06 10:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 10 BB        news2  2021-01-21 09:30:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 11 BB        news2  2021-01-22 12:30:00                4 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA      #> 12 BB        news2  2021-01-23 09:00:00                3 NA        NA               NA                 NEWS2 score NA    numeric IP Vitals Vital signs 10926333     239 1234           NEWS2 NA       # An alternative re-implemention a version of max_during() summarise_during(adm_data_example,                  fsheet_news2_example,                  datetime = measurement_datetime,                  during = \"during_visit\",                  type = \"summarise\",                  formula =                    tibble(value_as_number = max(value_as_number),                           type = \"numeric\"),                  names_suffix = \"mymax\") %>%   select(person_id, visit_id, contains(\"mymax\")) #> ℹ Extracting all during #> ℹ Checking datetime is not all midnight #> ✔ Checking datetime is not all midnight [14ms] #>  #> ℹ Extracting all during #> ℹ Joining tables #> ✔ Joining tables [21ms] #>  #> ℹ Extracting all during #> ✔ Extracting all during [47ms] #>  #> ℹ Summarising/slicing #> ✔ Summarising/slicing [20ms] #>  #> ℹ Pivoting wider #> ℹ Identifying symbol-type pairs #> ✔ Identifying symbol-type pairs [14ms] #>  #> ℹ Pivoting wider #> ℹ Pivoting wider #> Error in data[vec_unique(c(id_cols, names_from_cols, values_from_cols,     unused_cols))]: Can't subset columns that don't exist. #> ✖ Column `datetime` doesn't exist. #> ✖ Pivoting wider [24ms] #>  #> ℹ Pivoting wider #> ✖ Pivoting wider [57ms] #>"},{"path":"/reference/tbl_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Renamed view of raw data to tidy column names — tbl_raw","title":"Renamed view of raw data to tidy column names — tbl_raw","text":"Create view table standardised, shorter column names (e.g. lowercase, underscore-separated, _datetime suffix etc) rather default names standard data format Clinical Informatics.","code":""},{"path":"/reference/tbl_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renamed view of raw data to tidy column names — tbl_raw","text":"","code":"tbl_raw(src, table, names = c())"},{"path":"/reference/tbl_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renamed view of raw data to tidy column names — tbl_raw","text":"src DBIConnection object produced duckdb_tidybrookes_connect DBI::dbConnect() table string specifying name table. Typical values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology names vector new_name = old_name pairs","code":""},{"path":"/reference/tbl_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renamed view of raw data to tidy column names — tbl_raw","text":"default renaming map can viewed using default_rename(). variations format occur, custom renaming can performed using names argument.","code":""},{"path":"/reference/tbl_raw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Renamed view of raw data to tidy column names — tbl_raw","text":"R.J.B. Goudie","code":""},{"path":"/reference/tbl_raw_unrenamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Pointer to raw unrenamed table in duckdb — tbl_raw_unrenamed","title":"Pointer to raw unrenamed table in duckdb — tbl_raw_unrenamed","text":"Pointer raw unrenamed table duckdb","code":""},{"path":"/reference/tbl_raw_unrenamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pointer to raw unrenamed table in duckdb — tbl_raw_unrenamed","text":"","code":"tbl_raw_unrenamed(src, table)"},{"path":"/reference/tbl_raw_unrenamed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pointer to raw unrenamed table in duckdb — tbl_raw_unrenamed","text":"src DBIConnection object produced duckdb_tidybrookes_connect DBI::dbConnect() table string specifying name table. Typical values adm, adt, demogs, fsheet, fsheet_io, tests, med_admin, med_prescr, diagnosis_pl, med_hist, radiology","code":""},{"path":"/reference/tests_abg.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape arterial blood gas data — tests_abg","title":"Reshape arterial blood gas data — tests_abg","text":"Reshape arterial blood gas data","code":""},{"path":"/reference/tests_abg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape arterial blood gas data — tests_abg","text":"","code":"tests_abg(bg_data, bg_specimen_type)"},{"path":"/reference/tests_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add annotations to tests data — tests_annotate","title":"Add annotations to tests data — tests_annotate","text":"Annotate tests data note rows excluded etc.","code":""},{"path":"/reference/tests_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add annotations to tests data — tests_annotate","text":"","code":"tests_annotate(x, tests_def, annotation_db = NULL)"},{"path":"/reference/tests_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add annotations to tests data — tests_annotate","text":"x Tests data renamed format (applying tests_rename) tests_def tests definition, list tests definitions annotation_db Either NULL tbl reference annotations database table annotations stored . NULL annotations added x additional columns.","code":""},{"path":"/reference/tests_annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add annotations to tests data — tests_annotate","text":"Annotations can either added additional columns (annotation_db = NULL), stored separate database table (setting annotation_db database tbl). Note adding annotations additiona columns, result sorted, since left original order x","code":""},{"path":"/reference/tests_annotate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add annotations to tests data — tests_annotate","text":"R.J.B. Goudie","code":""},{"path":"/reference/tests_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new definition of a test item — tests_add","title":"Add a new definition of a test item — tests_add","text":"Add new definition test item Extract tests data tidy format","code":""},{"path":"/reference/tests_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new definition of a test item — tests_add","text":"","code":"tests_add(   test_def,   symbol,   title,   names_cuh = NULL,   names_external = NULL,   search_pattern,   search_exclude = NULL,   search_exclude_group = NULL,   type = \"numeric\",   silently_exclude_na_when = FALSE,   silently_exclude_when = FALSE,   censoring_fn = case_when(TRUE ~ NA_character_),   value_as_number_fn = if_else(type == \"numeric\", case_when(TRUE ~ value_as_number),     case_when(TRUE ~ NA_real_)),   value_as_character_fn = if_else(type == \"character\", case_when(TRUE ~     value_as_character), case_when(TRUE ~ NA_character_)),   value_as_logical_fn = if_else(type == \"logical\", case_when(TRUE ~ value_as_logical),     case_when(TRUE ~ as.logical(NA))),   unit_rescale_fn = case_when(TRUE ~ value_as_number),   unit_relabel_fn = case_when(TRUE ~ unit),   expect_before = TRUE,   expect_after = TRUE,   range_mainly_low = NULL,   range_mainly_high = NULL,   range_discard_below = NULL,   range_discard_above = NULL )  tests_extract(   x,   tests_def,   errors = stop,   rds_only = FALSE,   rds_filepath_fn = NULL )"},{"path":"/reference/tests_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new definition of a test item — tests_add","text":"test_def list existing test definitions add symbol short name flowsheet item. character vector suitable use R object name title full name test item, suitable using figure titles etc names_cuh names test (TestName raw format) tests include CUH names_external names test (TestName raw format) tests include external sources. NOTE CURRENTLY INCLUDE EXTERNAL TESTS . search_pattern charater vector potential synonymns test, case new names (TestName raw format) test added future. search_exclude character vector test names (TestName raw format) known relevant test. search_exclude_group character vector test group names (TestGroupName raw format) known relevant test. type Whether flowsheet item number string. Either \"numeric\" \"character\" silently_exclude_na_when expression returns logical value, specifying circumstances NA values automatically excluded. silently_exclude_when expression returns logical value, specifying circumstances values automatically excluded censoring_fn function specifying value censoring column value_as_number_fn function specifying generate value_as_number column value_as_character_fn function specifying generate value_as_character column value_as_logical_fn function specifying generate value_as_logical column unit_rescale_fn function specifying rescale result values. default, rescale. unit_relabel_fn function specifying relabel units result values. default, rescale. expect_before expression returns logical value, specifying condition TRUE raw data expect_after expression returns logical value, specifying condition TRUE processed (output) data range_mainly_low, range_mainly_high indicative lower upper range values. Values outside range excluded: purely setting default scales plots etc range_discard_below, range_discard_above pair set lower upper range flowsheet item. Values outside range EXCLUDED. x Test data tidy-column-name format (applying tests_rename) tests_def tests definition errors function indicating error found","code":""},{"path":"/reference/tests_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new definition of a test item — tests_add","text":"data frame following columns: person_id, symbol, value_as_number, value_as_character, value_as_logical, censoring, ordered_datetime, collected_datetime, received_datetime, result_datetime, ordering_department_name, range_low, range_high, unit, name, title, method, group, type result sorted collected_datetime","code":""},{"path":"/reference/tests_extract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a new definition of a test item — tests_add","text":"R.J.B. Goudie","code":""},{"path":"/reference/tests_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new definition of a test item — tests_add","text":"","code":"tests_raw_example <-   read_tidybrookes_csv(     file = tidybrookes_example(\"tests.csv\"),     col_types = \"tests\") %>%     tests_rename  tests_def <- list() %>%   tests_add(     symbol = \"magnesium\",     title = \"Magnesium\",     names_cuh = c(\"MAGNESIUM\"),     names_external = \"EXT MAGNESIUM\",     search_pattern = c(\"magnesium\", \"mg\"),     search_exclude = c(\"ETOH MG/100ML\",                        \"RETIRED-ETOH MG/100ML\",                        \"RIST 0.2MG/ML\",                        \"RIST 0.77MG/ML\",                        \"RISTOCETIN 0.5MG/ML\",                        \"RISTOCETIN 1.5MG/ML\"),     silently_exclude_na_when = FALSE,     censoring_fn = case_when(value_original == \"<0.29\" ~ \"left\", # very low                              TRUE ~ NA_character_),     value_as_number_fn = case_when(value_original == \"<0.29\" ~ 0.29,                                    TRUE ~ value_as_number),     expect_before = (unit == \"mmol/L\"),     range_mainly_low = 0.4,     range_mainly_high = 1.2,     range_discard_above = 1.8)  tests_raw_example %>% filter(name == \"MAGNESIUM\") #> # A tibble: 9 × 14 #>   person_id name      value ordered_datetime    collected_datetime  received_datetime   result_datetime     ordering_department  range_low range_high unit   method group    order_id #>   <chr>     <chr>     <chr> <dttm>              <dttm>              <dttm>              <dttm>              <chr>                <chr>     <chr>      <chr>  <chr>  <chr>     <int64> #> 1 AA        MAGNESIUM 0.9   2021-01-02 09:00:00 2021-01-02 09:40:00 2021-01-02 09:50:00 2021-01-02 18:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 2 AA        MAGNESIUM 3.0   2021-01-03 09:00:00 2021-01-03 09:40:00 2021-01-03 09:50:00 2021-01-03 18:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 3 BB        MAGNESIUM 0.8   2021-01-19 09:00:00 2021-01-19 08:40:00 2021-01-19 09:40:00 2021-01-19 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 4 BB        MAGNESIUM 0.9   2021-01-20 09:00:00 2021-01-20 08:40:00 2021-01-20 09:40:00 2021-01-20 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 5 BB        MAGNESIUM 1.0   2021-01-21 09:00:00 2021-01-21 08:40:00 2021-01-21 09:40:00 2021-01-21 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 6 BB        MAGNESIUM 1.2   2021-01-22 09:00:00 2021-01-22 08:40:00 2021-01-22 09:40:00 2021-01-22 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 7 BB        MAGNESIUM 0.7   2021-01-23 09:00:00 2021-01-23 08:40:00 2021-01-23 09:40:00 2021-01-23 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 8 CC        MAGNESIUM 0.61  2021-02-01 14:00:00 2021-02-01 15:40:00 2021-02-01 16:50:00 2021-02-01 17:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242 #> 9 CC        MAGNESIUM <0.29 2021-02-02 14:00:00 2021-02-02 15:40:00 2021-02-02 16:50:00 2021-02-02 17:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L ABC    MINERALS     1242  # Note that # - the high value of 3.0 is deleted because it is above #   range_discard_above # - note that the censored value \"<0.29\" is converted to 0.29, and \"left\" #   added to the censoring column tests_extract(tests_raw_example, tests_def) #> ℹ Extracting Magnesium (magnesium) #> ℹ 9 rows of raw data #> ℹ 1 row labelled since >1.8 #> ℹ 9 rows extracted #> ℹ 8 rows extracted #> # A tibble: 8 × 35 #>   person_id symbol    collected_datetime  value_as_number ordered_datetime    received_datetime   result_datetime     ordering_department  range_low range_high unit   name  title method group order_id #>   <chr>     <chr>     <dttm>                        <dbl> <dttm>              <dttm>              <dttm>              <chr>                <chr>     <chr>      <chr>  <chr> <chr> <chr>  <chr>  <int64> #> 1 AA        magnesium 2021-01-02 09:40:00            0.9  2021-01-02 09:00:00 2021-01-02 09:50:00 2021-01-02 18:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 2 BB        magnesium 2021-01-19 08:40:00            0.8  2021-01-19 09:00:00 2021-01-19 09:40:00 2021-01-19 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 3 BB        magnesium 2021-01-20 08:40:00            0.9  2021-01-20 09:00:00 2021-01-20 09:40:00 2021-01-20 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 4 BB        magnesium 2021-01-21 08:40:00            1    2021-01-21 09:00:00 2021-01-21 09:40:00 2021-01-21 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 5 BB        magnesium 2021-01-22 08:40:00            1.2  2021-01-22 09:00:00 2021-01-22 09:40:00 2021-01-22 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 6 BB        magnesium 2021-01-23 08:40:00            0.7  2021-01-23 09:00:00 2021-01-23 09:40:00 2021-01-23 12:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 7 CC        magnesium 2021-02-01 15:40:00            0.61 2021-02-01 14:00:00 2021-02-01 16:50:00 2021-02-01 17:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> 8 CC        magnesium 2021-02-02 15:40:00            0.29 2021-02-02 14:00:00 2021-02-02 16:50:00 2021-02-02 17:00:00 EMERGENCY DEPARTMENT 0.6       1          mmol/L MAGN… Magn… ABC    MINE…     1242 #> # ℹ 19 more variables: tests_id <int>, value_as_character <chr>, censoring <chr>, value_as_logical <lgl>, type <chr>, satisfies_expect_before <lgl>, satisfies_all_numeric <lgl>, #> #   satisfies_expect_after <lgl>, exclude <lgl>, exclude_is_duplicate <lgl>, exclude_is_duplicate_of_row_number <int>, exclude_is_silently_exclude_na <lgl>, exclude_is_silently_exclude <lgl>, #> #   exclude_is_too_high <lgl>, exclude_is_too_low <lgl>, range_mainly_low <dbl>, range_mainly_high <dbl>, range_discard_below <dbl>, range_discard_above <dbl>"},{"path":"/reference/tests_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tests defintion list to a dataframe — tests_info","title":"Convert tests defintion list to a dataframe — tests_info","text":"Convert tests defintion list dataframe","code":""},{"path":"/reference/tests_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tests defintion list to a dataframe — tests_info","text":"","code":"tests_info(tests_def)"},{"path":"/reference/tests_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tests defintion list to a dataframe — tests_info","text":"tests_def test definition list","code":""},{"path":"/reference/tests_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tests defintion list to a dataframe — tests_info","text":"","code":"tests_info(tests_def_example) #> # A tibble: 1 × 12 #>   symbol    title     type    names_cuh names_external range_mainly_low range_mainly_high range_discard_below range_discard_above search_pattern search_exclude search_exclude_group #>   <chr>     <chr>     <chr>   <list>    <list>                    <dbl>             <dbl>               <dbl>               <dbl> <list>         <list>         <list>               #> 1 magnesium Magnesium numeric <chr [1]> <chr [1]>                   0.4               1.2                0.32                 1.8 <chr [2]>      <chr [6]>      <lgl [1]>"},{"path":"/reference/tests_pivot_longer_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot tests longer by order — tests_pivot_longer_order","title":"Pivot tests longer by order — tests_pivot_longer_order","text":"Pivot tests longer order","code":""},{"path":"/reference/tests_pivot_longer_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot tests longer by order — tests_pivot_longer_order","text":"","code":"tests_pivot_longer_order(x)"},{"path":"/reference/tests_pivot_wider_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Widen test data — tests_pivot_wider_order","title":"Widen test data — tests_pivot_wider_order","text":"Reshapes data tests order_id person appear columns","code":""},{"path":"/reference/tests_pivot_wider_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Widen test data — tests_pivot_wider_order","text":"","code":"tests_pivot_wider_order(x, values_fn = NULL, include_censoring = FALSE)"},{"path":"/reference/tests_pivot_wider_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Widen test data — tests_pivot_wider_order","text":"x tidy test data frame values_fn function summarise multiple results particular test particular order. include_censoring Logical, censoring column included?","code":""},{"path":"/reference/tests_pivot_wider_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Widen test data — tests_pivot_wider_order","text":"data frame tests columns","code":""},{"path":"/reference/tests_pivot_wider_order.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Widen test data — tests_pivot_wider_order","text":"R.J.B. Goudie","code":""},{"path":"/reference/tidybrookes_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to tidybrookes example — tidybrookes_example","title":"Get path to tidybrookes example — tidybrookes_example","text":"tidybrookes comes bundled number sample files inst/extdata directory. function make easy access","code":""},{"path":"/reference/tidybrookes_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to tidybrookes example — tidybrookes_example","text":"","code":"tidybrookes_example(file = NULL)"},{"path":"/reference/tidybrookes_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to tidybrookes example — tidybrookes_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"/reference/tidybrookes_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to tidybrookes example — tidybrookes_example","text":"","code":"tidybrookes_example() #>  [1] \"adm.csv\"               \"adt.csv\"               \"fsheet.csv\"            \"test_adm.csv\"          \"test_diagnosis_pl.csv\" \"test_fsheet.csv\"       \"test_med_admin.csv\"    \"test_radiology.csv\"    #>  [9] \"test_tests.csv\"        \"tests.csv\"             tidybrookes_example(\"fsheet.csv\") #> [1] \"/home/runner/work/_temp/Library/tidybrookes/extdata/fsheet.csv\""},{"path":"/reference/unrename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename from tidy to raw column names — unrename","title":"Rename from tidy to raw column names — unrename","text":"standard data format Clinical Informatics handled default. variations format occur, custom renaming can performed using names argument","code":""},{"path":"/reference/unrename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename from tidy to raw column names — unrename","text":"","code":"adm_unrename(x, names = flip_names_and_values(default_rename(\"adm\")))  adt_unrename(x, names = flip_names_and_values(default_rename(\"adt\")))  demogs_unrename(x, names = flip_names_and_values(default_rename(\"demogs\")))  diagnosis_pl_unrename(   x,   names = flip_names_and_values(default_rename(\"diagnosis_pl\")) )  fsheet_io_unrename(   x,   names = flip_names_and_values(default_rename(\"fsheet_io\")) )  fsheet_unrename(x, names = flip_names_and_values(default_rename(\"fsheet\")))  med_admin_unrename(   x,   names = flip_names_and_values(default_rename(\"med_admin\")) )  med_prescr_unrename(   x,   names = flip_names_and_values(default_rename(\"med_prescr\")) )  radiology_unrename(   x,   names = flip_names_and_values(default_rename(\"radiology\")) )  procedures_unrename(   x,   names = c(STUDY_SUBJECT_DIGEST = \"person_id\", PROCEDUREDATE = \"procedure_datetime\",     PROCEDUREDESC = \"description\", OPCSCODE = \"opcs\") )  tests_unrename(   x,   names = c(STUDY_SUBJECT_DIGEST = \"person_id\", TestName = \"name\", ResultValue = \"value\",     ORDERED_DATETIME = \"ordered_datetime\", COLLECTED_DATETIME = \"collected_datetime\",     RECEIVED_DATETIME = \"received_datetime\", ResultDate = \"result_datetime\",     ORDERING_DEPARTMENT_NAME = \"ordering_department\", ReferenceLow = \"range_low\",     ReferenceHigh = \"range_high\", ResultUnit = \"unit\", Method = \"method\", TestGroupName =     \"group\", OrderProcId = \"order_id\") )"},{"path":"/reference/unrename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename from tidy to raw column names — unrename","text":"x data frame raw adm data tidy names names vector new_name = old_name pairs","code":""},{"path":"/reference/unrename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename from tidy to raw column names — unrename","text":"supplied data frame, column names tidy-column-name format","code":""},{"path":[]},{"path":"/reference/unrename.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename from tidy to raw column names — unrename","text":"R.J.B. Goudie","code":""},{"path":"/reference/unrename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename from tidy to raw column names — unrename","text":"","code":"fsheet_imported_example <-   read_tidybrookes_csv(     file = tidybrookes_example(\"fsheet.csv\"),     col_types = \"fsheet\"   ) colnames(fsheet_imported_example) #>  [1] \"STUDY_SUBJECT_DIGEST\" \"fsd_id\"               \"line\"                 \"flo-meas_id\"          \"MEASURE_TIME\"         \"disp_name\"            \"measured_value\"       \"meas_comment\"         #>  [9] \"template\"             \"form\"                 colnames(fsheet_rename(fsheet_imported_example)) #>  [1] \"person_id\"            \"name\"                 \"value\"                \"comment\"              \"measurement_datetime\" \"data_id\"              \"measurement_id\"       \"line_id\"              #>  [9] \"template\"             \"form\"                 colnames(fsheet_unrename(fsheet_rename(fsheet_imported_example))) #>  [1] \"STUDY_SUBJECT_DIGEST\" \"disp_name\"            \"measured_value\"       \"meas_comment\"         \"MEASURE_TIME\"         \"fsd_id\"               \"flo-meas_id\"          \"line\"                 #>  [9] \"template\"             \"form\""},{"path":"/reference/wrap_def_if_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap definition in a list — wrap_def_if_single","title":"Wrap definition in a list — wrap_def_if_single","text":"Makes handling single-item definition lists easier wrapping enclosing list, can handled using lapply etc.","code":""},{"path":"/reference/wrap_def_if_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap definition in a list — wrap_def_if_single","text":"","code":"wrap_def_if_single(def)"},{"path":"/reference/wrap_def_if_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap definition in a list — wrap_def_if_single","text":"def definition list","code":""}]
